
/* Automatically generated struct definitions for the Data API.
 * Do not edit manually, changes will be overwritten.           */

#define RNA_RUNTIME

#include <float.h>
#include <stdio.h>
#include <limits.h>
#include <limits>
#include <string.h>

#include <stddef.h>

#include "MEM_guardedalloc.h"

#include "DNA_ID.h"
#include "DNA_scene_types.h"
#include "DNA_node_types.h"
#include "BLI_blenlib.h"

#include "BLI_utildefines.h"

#include "BKE_context.hh"
#include "BKE_lib_id.h"
#include "BKE_main.h"
#include "BKE_report.h"
#include "RNA_define.hh"
#include "RNA_types.hh"
#include "rna_internal.h"

#include "rna_prototypes_gen.h"

#include "rna_texture.cc"
#include "rna_texture_api.cc"

#ifdef __cplusplus
#  define RNA_EXTERN_C extern "C"
#  define RNA_EXTERN_C_OR_EXTERN extern "C"
#else
#  define RNA_EXTERN_C
#  define RNA_EXTERN_C_OR_EXTERN extern
#endif
/* Auto-generated Functions. */


RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C PointerPropertyRNA rna_Texture_animation_data;

extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;


extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_CloudsTexture_noise_scale;
RNA_EXTERN_C IntPropertyRNA rna_CloudsTexture_noise_depth;
RNA_EXTERN_C EnumPropertyRNA rna_CloudsTexture_noise_basis;
RNA_EXTERN_C EnumPropertyRNA rna_CloudsTexture_noise_type;
RNA_EXTERN_C EnumPropertyRNA rna_CloudsTexture_cloud_type;
RNA_EXTERN_C FloatPropertyRNA rna_CloudsTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_WoodTexture_noise_scale;
RNA_EXTERN_C FloatPropertyRNA rna_WoodTexture_turbulence;
RNA_EXTERN_C EnumPropertyRNA rna_WoodTexture_noise_basis;
RNA_EXTERN_C EnumPropertyRNA rna_WoodTexture_noise_type;
RNA_EXTERN_C EnumPropertyRNA rna_WoodTexture_wood_type;
RNA_EXTERN_C EnumPropertyRNA rna_WoodTexture_noise_basis_2;
RNA_EXTERN_C FloatPropertyRNA rna_WoodTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_MarbleTexture_noise_scale;
RNA_EXTERN_C FloatPropertyRNA rna_MarbleTexture_turbulence;
RNA_EXTERN_C IntPropertyRNA rna_MarbleTexture_noise_depth;
RNA_EXTERN_C EnumPropertyRNA rna_MarbleTexture_noise_type;
RNA_EXTERN_C EnumPropertyRNA rna_MarbleTexture_marble_type;
RNA_EXTERN_C EnumPropertyRNA rna_MarbleTexture_noise_basis;
RNA_EXTERN_C EnumPropertyRNA rna_MarbleTexture_noise_basis_2;
RNA_EXTERN_C FloatPropertyRNA rna_MarbleTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_MagicTexture_turbulence;
RNA_EXTERN_C IntPropertyRNA rna_MagicTexture_noise_depth;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C EnumPropertyRNA rna_BlendTexture_progression;
RNA_EXTERN_C EnumPropertyRNA rna_BlendTexture_use_flip_axis;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_StucciTexture_turbulence;
RNA_EXTERN_C EnumPropertyRNA rna_StucciTexture_noise_basis;
RNA_EXTERN_C FloatPropertyRNA rna_StucciTexture_noise_scale;
RNA_EXTERN_C EnumPropertyRNA rna_StucciTexture_noise_type;
RNA_EXTERN_C EnumPropertyRNA rna_StucciTexture_stucci_type;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_interpolation;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_flip_axis;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_alpha;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_calculate_alpha;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_invert_alpha;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_mipmap;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_mipmap_gauss;
RNA_EXTERN_C EnumPropertyRNA rna_ImageTexture_filter_type;
RNA_EXTERN_C IntPropertyRNA rna_ImageTexture_filter_lightprobes;
RNA_EXTERN_C IntPropertyRNA rna_ImageTexture_filter_eccentricity;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_filter_size_min;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_filter_size;
RNA_EXTERN_C EnumPropertyRNA rna_ImageTexture_extension;
RNA_EXTERN_C IntPropertyRNA rna_ImageTexture_repeat_x;
RNA_EXTERN_C IntPropertyRNA rna_ImageTexture_repeat_y;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_mirror_x;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_mirror_y;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_checker_odd;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_checker_even;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_checker_distance;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_crop_min_x;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_crop_min_y;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_crop_max_x;
RNA_EXTERN_C FloatPropertyRNA rna_ImageTexture_crop_max_y;
RNA_EXTERN_C PointerPropertyRNA rna_ImageTexture_image;
RNA_EXTERN_C PointerPropertyRNA rna_ImageTexture_image_user;
RNA_EXTERN_C BoolPropertyRNA rna_ImageTexture_use_normal_map;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C EnumPropertyRNA rna_MusgraveTexture_musgrave_type;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_dimension_max;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_lacunarity;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_octaves;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_offset;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_gain;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_noise_intensity;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_noise_scale;
RNA_EXTERN_C EnumPropertyRNA rna_MusgraveTexture_noise_basis;
RNA_EXTERN_C FloatPropertyRNA rna_MusgraveTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_weight_1;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_weight_2;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_weight_3;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_weight_4;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_minkovsky_exponent;
RNA_EXTERN_C EnumPropertyRNA rna_VoronoiTexture_distance_metric;
RNA_EXTERN_C EnumPropertyRNA rna_VoronoiTexture_color_mode;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_noise_intensity;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_noise_scale;
RNA_EXTERN_C FloatPropertyRNA rna_VoronoiTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C_OR_EXTERN EnumPropertyRNA rna_Texture_type;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_clamp;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_color_ramp;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_color_ramp;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_intensity;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_contrast;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_saturation;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_red;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_green;
RNA_EXTERN_C_OR_EXTERN FloatPropertyRNA rna_Texture_factor_blue;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_preview_alpha;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_Texture_use_nodes;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_node_tree;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_Texture_animation_data;

RNA_EXTERN_C_OR_EXTERN CollectionPropertyRNA rna_ID_rna_properties;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_rna_type;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name;
RNA_EXTERN_C_OR_EXTERN StringPropertyRNA rna_ID_name_full;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_evaluated;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_original;
RNA_EXTERN_C_OR_EXTERN IntPropertyRNA rna_ID_users;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_fake_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_use_extra_user;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_embedded_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_missing;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_runtime_data;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_tag;
RNA_EXTERN_C_OR_EXTERN BoolPropertyRNA rna_ID_is_library_indirect;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_library_weak_reference;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_asset_data;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_override_library;
RNA_EXTERN_C_OR_EXTERN PointerPropertyRNA rna_ID_preview;

RNA_EXTERN_C FloatPropertyRNA rna_DistortedNoiseTexture_distortion;
RNA_EXTERN_C FloatPropertyRNA rna_DistortedNoiseTexture_noise_scale;
RNA_EXTERN_C EnumPropertyRNA rna_DistortedNoiseTexture_noise_basis;
RNA_EXTERN_C EnumPropertyRNA rna_DistortedNoiseTexture_noise_distortion;
RNA_EXTERN_C FloatPropertyRNA rna_DistortedNoiseTexture_nabla;

extern FunctionRNA rna_Texture_evaluate_func;
extern FloatPropertyRNA rna_Texture_evaluate_value;
extern FloatPropertyRNA rna_Texture_evaluate_result;


extern FunctionRNA rna_ID_evaluated_get_func;
extern PointerPropertyRNA rna_ID_evaluated_get_depsgraph;
extern PointerPropertyRNA rna_ID_evaluated_get_id;

extern FunctionRNA rna_ID_copy_func;
extern PointerPropertyRNA rna_ID_copy_id;

extern FunctionRNA rna_ID_asset_mark_func;
extern FunctionRNA rna_ID_asset_clear_func;
extern FunctionRNA rna_ID_asset_generate_preview_func;
extern FunctionRNA rna_ID_override_create_func;
extern PointerPropertyRNA rna_ID_override_create_id;
extern BoolPropertyRNA rna_ID_override_create_remap_local_usages;

extern FunctionRNA rna_ID_override_hierarchy_create_func;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_id;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_scene;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_view_layer;
extern PointerPropertyRNA rna_ID_override_hierarchy_create_reference;
extern BoolPropertyRNA rna_ID_override_hierarchy_create_do_fully_editable;

extern FunctionRNA rna_ID_override_template_create_func;
extern FunctionRNA rna_ID_user_clear_func;
extern FunctionRNA rna_ID_user_remap_func;
extern PointerPropertyRNA rna_ID_user_remap_new_id;

extern FunctionRNA rna_ID_make_local_func;
extern BoolPropertyRNA rna_ID_make_local_clear_proxy;
extern PointerPropertyRNA rna_ID_make_local_id;

extern FunctionRNA rna_ID_user_of_id_func;
extern PointerPropertyRNA rna_ID_user_of_id_id;
extern IntPropertyRNA rna_ID_user_of_id_count;

extern FunctionRNA rna_ID_animation_data_create_func;
extern PointerPropertyRNA rna_ID_animation_data_create_anim_data;

extern FunctionRNA rna_ID_animation_data_clear_func;
extern FunctionRNA rna_ID_update_tag_func;
extern EnumPropertyRNA rna_ID_update_tag_refresh;

extern FunctionRNA rna_ID_preview_ensure_func;
extern PointerPropertyRNA rna_ID_preview_ensure_preview_image;



RNA_EXTERN_C CollectionPropertyRNA rna_TextureSlot_rna_properties;
RNA_EXTERN_C PointerPropertyRNA rna_TextureSlot_rna_type;
RNA_EXTERN_C PointerPropertyRNA rna_TextureSlot_texture;
RNA_EXTERN_C StringPropertyRNA rna_TextureSlot_name;
RNA_EXTERN_C FloatPropertyRNA rna_TextureSlot_offset;
RNA_EXTERN_C FloatPropertyRNA rna_TextureSlot_scale;
RNA_EXTERN_C FloatPropertyRNA rna_TextureSlot_color;
RNA_EXTERN_C EnumPropertyRNA rna_TextureSlot_blend_type;
RNA_EXTERN_C FloatPropertyRNA rna_TextureSlot_default_value;
RNA_EXTERN_C EnumPropertyRNA rna_TextureSlot_output_node;


RNA_EXTERN_C CollectionPropertyRNA rna_TexMapping_rna_properties;
RNA_EXTERN_C PointerPropertyRNA rna_TexMapping_rna_type;
RNA_EXTERN_C EnumPropertyRNA rna_TexMapping_vector_type;
RNA_EXTERN_C FloatPropertyRNA rna_TexMapping_translation;
RNA_EXTERN_C FloatPropertyRNA rna_TexMapping_rotation;
RNA_EXTERN_C FloatPropertyRNA rna_TexMapping_scale;
RNA_EXTERN_C FloatPropertyRNA rna_TexMapping_min;
RNA_EXTERN_C FloatPropertyRNA rna_TexMapping_max;
RNA_EXTERN_C BoolPropertyRNA rna_TexMapping_use_min;
RNA_EXTERN_C BoolPropertyRNA rna_TexMapping_use_max;
RNA_EXTERN_C EnumPropertyRNA rna_TexMapping_mapping_x;
RNA_EXTERN_C EnumPropertyRNA rna_TexMapping_mapping_y;
RNA_EXTERN_C EnumPropertyRNA rna_TexMapping_mapping_z;
RNA_EXTERN_C EnumPropertyRNA rna_TexMapping_mapping;


RNA_EXTERN_C CollectionPropertyRNA rna_ColorMapping_rna_properties;
RNA_EXTERN_C PointerPropertyRNA rna_ColorMapping_rna_type;
RNA_EXTERN_C BoolPropertyRNA rna_ColorMapping_use_color_ramp;
RNA_EXTERN_C PointerPropertyRNA rna_ColorMapping_color_ramp;
RNA_EXTERN_C FloatPropertyRNA rna_ColorMapping_brightness;
RNA_EXTERN_C FloatPropertyRNA rna_ColorMapping_contrast;
RNA_EXTERN_C FloatPropertyRNA rna_ColorMapping_saturation;
RNA_EXTERN_C EnumPropertyRNA rna_ColorMapping_blend_type;
RNA_EXTERN_C FloatPropertyRNA rna_ColorMapping_blend_color;
RNA_EXTERN_C FloatPropertyRNA rna_ColorMapping_blend_factor;

RNA_EXTERN_C int Texture_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->type);
}

RNA_EXTERN_C void Texture_type_set(PointerRNA *ptr, int value)
{
    PropEnumSetFunc fn = rna_Texture_type_set;
    fn(ptr, value);
}

RNA_EXTERN_C bool Texture_use_clamp_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return !(((data->flag) & 1024) != 0);
}

RNA_EXTERN_C void Texture_use_clamp_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (!value) { data->flag |= 1024; }
    else { data->flag &= ~1024; }
}

RNA_EXTERN_C bool Texture_use_color_ramp_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 1) != 0);
}

RNA_EXTERN_C void Texture_use_color_ramp_set(PointerRNA *ptr, bool value)
{
    PropBooleanSetFunc fn = rna_Texture_use_color_ramp_set;
    fn(ptr, value);
}

RNA_EXTERN_C PointerRNA Texture_color_ramp_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_ColorRamp, data->coba);
}

RNA_EXTERN_C float Texture_intensity_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->bright);
}

RNA_EXTERN_C void Texture_intensity_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->bright = (std::remove_reference_t<decltype(data->bright)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->bright = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C float Texture_contrast_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->contrast);
}

RNA_EXTERN_C void Texture_contrast_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->contrast = (std::remove_reference_t<decltype(data->contrast)>)CLAMPIS(value, 0.0f, 5.0f);
#else
    data->contrast = CLAMPIS(value, 0.0f, 5.0f);
#endif
}

RNA_EXTERN_C float Texture_saturation_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->saturation);
}

RNA_EXTERN_C void Texture_saturation_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->saturation = (std::remove_reference_t<decltype(data->saturation)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->saturation = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C float Texture_factor_red_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->rfac);
}

RNA_EXTERN_C void Texture_factor_red_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->rfac = (std::remove_reference_t<decltype(data->rfac)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->rfac = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C float Texture_factor_green_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->gfac);
}

RNA_EXTERN_C void Texture_factor_green_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->gfac = (std::remove_reference_t<decltype(data->gfac)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->gfac = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C float Texture_factor_blue_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->bfac);
}

RNA_EXTERN_C void Texture_factor_blue_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->bfac = (std::remove_reference_t<decltype(data->bfac)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->bfac = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C bool Texture_use_preview_alpha_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 32) != 0);
}

RNA_EXTERN_C void Texture_use_preview_alpha_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 32; }
    else { data->flag &= ~32; }
}

RNA_EXTERN_C bool Texture_use_nodes_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->use_nodes) & 1) != 0);
}

RNA_EXTERN_C void Texture_use_nodes_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->use_nodes |= 1; }
    else { data->use_nodes &= ~1; }
}

RNA_EXTERN_C PointerRNA Texture_node_tree_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_NodeTree, data->nodetree);
}

RNA_EXTERN_C PointerRNA Texture_animation_data_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_AnimData, data->adt);
}

RNA_EXTERN_C float CloudsTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void CloudsTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int CloudsTexture_noise_depth_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisedepth);
}

RNA_EXTERN_C void CloudsTexture_noise_depth_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisedepth = (std::remove_reference_t<decltype(data->noisedepth)>)CLAMPIS(value, 0, 30);
#else
    data->noisedepth = CLAMPIS(value, 0, 30);
#endif
}

RNA_EXTERN_C int CloudsTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void CloudsTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C int CloudsTexture_noise_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisetype);
}

RNA_EXTERN_C void CloudsTexture_noise_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisetype = (std::remove_reference_t<decltype(data->noisetype)>)value;
#else
    data->noisetype = value;
#endif
}

RNA_EXTERN_C int CloudsTexture_cloud_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void CloudsTexture_cloud_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C float CloudsTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void CloudsTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

RNA_EXTERN_C float WoodTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void WoodTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C float WoodTexture_turbulence_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->turbul);
}

RNA_EXTERN_C void WoodTexture_turbulence_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->turbul = (std::remove_reference_t<decltype(data->turbul)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->turbul = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int WoodTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void WoodTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C int WoodTexture_noise_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisetype);
}

RNA_EXTERN_C void WoodTexture_noise_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisetype = (std::remove_reference_t<decltype(data->noisetype)>)value;
#else
    data->noisetype = value;
#endif
}

RNA_EXTERN_C int WoodTexture_wood_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void WoodTexture_wood_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C int WoodTexture_noise_basis_2_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis2);
}

RNA_EXTERN_C void WoodTexture_noise_basis_2_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis2 = (std::remove_reference_t<decltype(data->noisebasis2)>)value;
#else
    data->noisebasis2 = value;
#endif
}

RNA_EXTERN_C float WoodTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void WoodTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

RNA_EXTERN_C float MarbleTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void MarbleTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C float MarbleTexture_turbulence_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->turbul);
}

RNA_EXTERN_C void MarbleTexture_turbulence_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->turbul = (std::remove_reference_t<decltype(data->turbul)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->turbul = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int MarbleTexture_noise_depth_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisedepth);
}

RNA_EXTERN_C void MarbleTexture_noise_depth_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisedepth = (std::remove_reference_t<decltype(data->noisedepth)>)CLAMPIS(value, 0, 30);
#else
    data->noisedepth = CLAMPIS(value, 0, 30);
#endif
}

RNA_EXTERN_C int MarbleTexture_noise_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisetype);
}

RNA_EXTERN_C void MarbleTexture_noise_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisetype = (std::remove_reference_t<decltype(data->noisetype)>)value;
#else
    data->noisetype = value;
#endif
}

RNA_EXTERN_C int MarbleTexture_marble_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void MarbleTexture_marble_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C int MarbleTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void MarbleTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C int MarbleTexture_noise_basis_2_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis2);
}

RNA_EXTERN_C void MarbleTexture_noise_basis_2_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis2 = (std::remove_reference_t<decltype(data->noisebasis2)>)value;
#else
    data->noisebasis2 = value;
#endif
}

RNA_EXTERN_C float MarbleTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void MarbleTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

RNA_EXTERN_C float MagicTexture_turbulence_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->turbul);
}

RNA_EXTERN_C void MagicTexture_turbulence_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->turbul = (std::remove_reference_t<decltype(data->turbul)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->turbul = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int MagicTexture_noise_depth_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisedepth);
}

RNA_EXTERN_C void MagicTexture_noise_depth_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisedepth = (std::remove_reference_t<decltype(data->noisedepth)>)CLAMPIS(value, 0, 30);
#else
    data->noisedepth = CLAMPIS(value, 0, 30);
#endif
}

RNA_EXTERN_C int BlendTexture_progression_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void BlendTexture_progression_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C int BlendTexture_use_flip_axis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return ((data->flag) & 2);
}

RNA_EXTERN_C void BlendTexture_use_flip_axis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
    data->flag &= ~2;
    data->flag |= value;
}

RNA_EXTERN_C float StucciTexture_turbulence_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->turbul);
}

RNA_EXTERN_C void StucciTexture_turbulence_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->turbul = (std::remove_reference_t<decltype(data->turbul)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->turbul = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int StucciTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void StucciTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C float StucciTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void StucciTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int StucciTexture_noise_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisetype);
}

RNA_EXTERN_C void StucciTexture_noise_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisetype = (std::remove_reference_t<decltype(data->noisetype)>)value;
#else
    data->noisetype = value;
#endif
}

RNA_EXTERN_C int StucciTexture_stucci_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void StucciTexture_stucci_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C bool ImageTexture_use_interpolation_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 1) != 0);
}

RNA_EXTERN_C void ImageTexture_use_interpolation_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 1; }
    else { data->imaflag &= ~1; }
}

RNA_EXTERN_C bool ImageTexture_use_flip_axis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 16) != 0);
}

RNA_EXTERN_C void ImageTexture_use_flip_axis_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 16; }
    else { data->imaflag &= ~16; }
}

RNA_EXTERN_C bool ImageTexture_use_alpha_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 2) != 0);
}

RNA_EXTERN_C void ImageTexture_use_alpha_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 2; }
    else { data->imaflag &= ~2; }
}

RNA_EXTERN_C bool ImageTexture_use_calculate_alpha_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 32) != 0);
}

RNA_EXTERN_C void ImageTexture_use_calculate_alpha_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 32; }
    else { data->imaflag &= ~32; }
}

RNA_EXTERN_C bool ImageTexture_invert_alpha_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 4) != 0);
}

RNA_EXTERN_C void ImageTexture_invert_alpha_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 4; }
    else { data->flag &= ~4; }
}

RNA_EXTERN_C bool ImageTexture_use_mipmap_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 4) != 0);
}

RNA_EXTERN_C void ImageTexture_use_mipmap_set(PointerRNA *ptr, bool value)
{
    PropBooleanSetFunc fn = rna_ImageTexture_mipmap_set;
    fn(ptr, value);
}

RNA_EXTERN_C bool ImageTexture_use_mipmap_gauss_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 4096) != 0);
}

RNA_EXTERN_C void ImageTexture_use_mipmap_gauss_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 4096; }
    else { data->imaflag &= ~4096; }
}

RNA_EXTERN_C int ImageTexture_filter_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->texfilter);
}

RNA_EXTERN_C void ImageTexture_filter_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->texfilter = (std::remove_reference_t<decltype(data->texfilter)>)value;
#else
    data->texfilter = value;
#endif
}

RNA_EXTERN_C int ImageTexture_filter_lightprobes_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->afmax);
}

RNA_EXTERN_C void ImageTexture_filter_lightprobes_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->afmax = (std::remove_reference_t<decltype(data->afmax)>)CLAMPIS(value, 1, 256);
#else
    data->afmax = CLAMPIS(value, 1, 256);
#endif
}

RNA_EXTERN_C int ImageTexture_filter_eccentricity_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->afmax);
}

RNA_EXTERN_C void ImageTexture_filter_eccentricity_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->afmax = (std::remove_reference_t<decltype(data->afmax)>)CLAMPIS(value, 1, 256);
#else
    data->afmax = CLAMPIS(value, 1, 256);
#endif
}

RNA_EXTERN_C bool ImageTexture_use_filter_size_min_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 8192) != 0);
}

RNA_EXTERN_C void ImageTexture_use_filter_size_min_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 8192; }
    else { data->imaflag &= ~8192; }
}

RNA_EXTERN_C float ImageTexture_filter_size_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->filtersize);
}

RNA_EXTERN_C void ImageTexture_filter_size_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->filtersize = (std::remove_reference_t<decltype(data->filtersize)>)CLAMPIS(value, 0.1000000015f, 50.0f);
#else
    data->filtersize = CLAMPIS(value, 0.1000000015f, 50.0f);
#endif
}

RNA_EXTERN_C int ImageTexture_extension_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->extend);
}

RNA_EXTERN_C void ImageTexture_extension_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->extend = (std::remove_reference_t<decltype(data->extend)>)value;
#else
    data->extend = value;
#endif
}

RNA_EXTERN_C int ImageTexture_repeat_x_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->xrepeat);
}

RNA_EXTERN_C void ImageTexture_repeat_x_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->xrepeat = (std::remove_reference_t<decltype(data->xrepeat)>)CLAMPIS(value, 1, 512);
#else
    data->xrepeat = CLAMPIS(value, 1, 512);
#endif
}

RNA_EXTERN_C int ImageTexture_repeat_y_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->yrepeat);
}

RNA_EXTERN_C void ImageTexture_repeat_y_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->yrepeat = (std::remove_reference_t<decltype(data->yrepeat)>)CLAMPIS(value, 1, 512);
#else
    data->yrepeat = CLAMPIS(value, 1, 512);
#endif
}

RNA_EXTERN_C bool ImageTexture_use_mirror_x_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 128) != 0);
}

RNA_EXTERN_C void ImageTexture_use_mirror_x_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 128; }
    else { data->flag &= ~128; }
}

RNA_EXTERN_C bool ImageTexture_use_mirror_y_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 256) != 0);
}

RNA_EXTERN_C void ImageTexture_use_mirror_y_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 256; }
    else { data->flag &= ~256; }
}

RNA_EXTERN_C bool ImageTexture_use_checker_odd_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 8) != 0);
}

RNA_EXTERN_C void ImageTexture_use_checker_odd_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 8; }
    else { data->flag &= ~8; }
}

RNA_EXTERN_C bool ImageTexture_use_checker_even_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->flag) & 16) != 0);
}

RNA_EXTERN_C void ImageTexture_use_checker_even_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->flag |= 16; }
    else { data->flag &= ~16; }
}

RNA_EXTERN_C float ImageTexture_checker_distance_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->checkerdist);
}

RNA_EXTERN_C void ImageTexture_checker_distance_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->checkerdist = (std::remove_reference_t<decltype(data->checkerdist)>)CLAMPIS(value, 0.0f, 0.9900000095f);
#else
    data->checkerdist = CLAMPIS(value, 0.0f, 0.9900000095f);
#endif
}

RNA_EXTERN_C float ImageTexture_crop_min_x_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->cropxmin);
}

RNA_EXTERN_C void ImageTexture_crop_min_x_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->cropxmin = (std::remove_reference_t<decltype(data->cropxmin)>)CLAMPIS(value, -10.0f, 10.0f);
#else
    data->cropxmin = CLAMPIS(value, -10.0f, 10.0f);
#endif
}

RNA_EXTERN_C float ImageTexture_crop_min_y_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->cropymin);
}

RNA_EXTERN_C void ImageTexture_crop_min_y_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->cropymin = (std::remove_reference_t<decltype(data->cropymin)>)CLAMPIS(value, -10.0f, 10.0f);
#else
    data->cropymin = CLAMPIS(value, -10.0f, 10.0f);
#endif
}

RNA_EXTERN_C float ImageTexture_crop_max_x_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->cropxmax);
}

RNA_EXTERN_C void ImageTexture_crop_max_x_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->cropxmax = (std::remove_reference_t<decltype(data->cropxmax)>)CLAMPIS(value, -10.0f, 10.0f);
#else
    data->cropxmax = CLAMPIS(value, -10.0f, 10.0f);
#endif
}

RNA_EXTERN_C float ImageTexture_crop_max_y_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->cropymax);
}

RNA_EXTERN_C void ImageTexture_crop_max_y_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->cropymax = (std::remove_reference_t<decltype(data->cropymax)>)CLAMPIS(value, -10.0f, 10.0f);
#else
    data->cropymax = CLAMPIS(value, -10.0f, 10.0f);
#endif
}

RNA_EXTERN_C PointerRNA ImageTexture_image_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_Image, data->ima);
}

RNA_EXTERN_C void ImageTexture_image_set(PointerRNA *ptr, PointerRNA value, struct ReportList *reports)
{
    Tex *data = (Tex *)(ptr->data);

    if (data->ima) {
        id_us_min((ID *)data->ima);
    }
    if (value.data) {
        id_us_plus((ID *)value.data);
    }
    *(void **)&data->ima = value.data;
}

RNA_EXTERN_C PointerRNA ImageTexture_image_user_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_ImageUser, &data->iuser);
}

RNA_EXTERN_C bool ImageTexture_use_normal_map_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (((data->imaflag) & 2048) != 0);
}

RNA_EXTERN_C void ImageTexture_use_normal_map_set(PointerRNA *ptr, bool value)
{
    Tex *data = (Tex *)(ptr->data);
    if (value) { data->imaflag |= 2048; }
    else { data->imaflag &= ~2048; }
}

RNA_EXTERN_C int MusgraveTexture_musgrave_type_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->stype);
}

RNA_EXTERN_C void MusgraveTexture_musgrave_type_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->stype = (std::remove_reference_t<decltype(data->stype)>)value;
#else
    data->stype = value;
#endif
}

RNA_EXTERN_C float MusgraveTexture_dimension_max_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->mg_H);
}

RNA_EXTERN_C void MusgraveTexture_dimension_max_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->mg_H = (std::remove_reference_t<decltype(data->mg_H)>)CLAMPIS(value, 0.0001000000f, 2.0f);
#else
    data->mg_H = CLAMPIS(value, 0.0001000000f, 2.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_lacunarity_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->mg_lacunarity);
}

RNA_EXTERN_C void MusgraveTexture_lacunarity_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->mg_lacunarity = (std::remove_reference_t<decltype(data->mg_lacunarity)>)CLAMPIS(value, 0.0f, 6.0f);
#else
    data->mg_lacunarity = CLAMPIS(value, 0.0f, 6.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_octaves_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->mg_octaves);
}

RNA_EXTERN_C void MusgraveTexture_octaves_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->mg_octaves = (std::remove_reference_t<decltype(data->mg_octaves)>)CLAMPIS(value, 0.0f, 8.0f);
#else
    data->mg_octaves = CLAMPIS(value, 0.0f, 8.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_offset_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->mg_offset);
}

RNA_EXTERN_C void MusgraveTexture_offset_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->mg_offset = (std::remove_reference_t<decltype(data->mg_offset)>)CLAMPIS(value, 0.0f, 6.0f);
#else
    data->mg_offset = CLAMPIS(value, 0.0f, 6.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_gain_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->mg_gain);
}

RNA_EXTERN_C void MusgraveTexture_gain_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->mg_gain = (std::remove_reference_t<decltype(data->mg_gain)>)CLAMPIS(value, 0.0f, 6.0f);
#else
    data->mg_gain = CLAMPIS(value, 0.0f, 6.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_noise_intensity_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->ns_outscale);
}

RNA_EXTERN_C void MusgraveTexture_noise_intensity_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->ns_outscale = (std::remove_reference_t<decltype(data->ns_outscale)>)CLAMPIS(value, 0.0f, 10.0f);
#else
    data->ns_outscale = CLAMPIS(value, 0.0f, 10.0f);
#endif
}

RNA_EXTERN_C float MusgraveTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void MusgraveTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int MusgraveTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void MusgraveTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C float MusgraveTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void MusgraveTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_weight_1_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->vn_w1);
}

RNA_EXTERN_C void VoronoiTexture_weight_1_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_w1 = (std::remove_reference_t<decltype(data->vn_w1)>)CLAMPIS(value, -2.0f, 2.0f);
#else
    data->vn_w1 = CLAMPIS(value, -2.0f, 2.0f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_weight_2_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->vn_w2);
}

RNA_EXTERN_C void VoronoiTexture_weight_2_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_w2 = (std::remove_reference_t<decltype(data->vn_w2)>)CLAMPIS(value, -2.0f, 2.0f);
#else
    data->vn_w2 = CLAMPIS(value, -2.0f, 2.0f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_weight_3_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->vn_w3);
}

RNA_EXTERN_C void VoronoiTexture_weight_3_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_w3 = (std::remove_reference_t<decltype(data->vn_w3)>)CLAMPIS(value, -2.0f, 2.0f);
#else
    data->vn_w3 = CLAMPIS(value, -2.0f, 2.0f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_weight_4_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->vn_w4);
}

RNA_EXTERN_C void VoronoiTexture_weight_4_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_w4 = (std::remove_reference_t<decltype(data->vn_w4)>)CLAMPIS(value, -2.0f, 2.0f);
#else
    data->vn_w4 = CLAMPIS(value, -2.0f, 2.0f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_minkovsky_exponent_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->vn_mexp);
}

RNA_EXTERN_C void VoronoiTexture_minkovsky_exponent_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_mexp = (std::remove_reference_t<decltype(data->vn_mexp)>)CLAMPIS(value, 0.0099999998f, 10.0f);
#else
    data->vn_mexp = CLAMPIS(value, 0.0099999998f, 10.0f);
#endif
}

RNA_EXTERN_C int VoronoiTexture_distance_metric_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->vn_distm);
}

RNA_EXTERN_C void VoronoiTexture_distance_metric_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_distm = (std::remove_reference_t<decltype(data->vn_distm)>)value;
#else
    data->vn_distm = value;
#endif
}

RNA_EXTERN_C int VoronoiTexture_color_mode_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->vn_coltype);
}

RNA_EXTERN_C void VoronoiTexture_color_mode_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->vn_coltype = (std::remove_reference_t<decltype(data->vn_coltype)>)value;
#else
    data->vn_coltype = value;
#endif
}

RNA_EXTERN_C float VoronoiTexture_noise_intensity_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->ns_outscale);
}

RNA_EXTERN_C void VoronoiTexture_noise_intensity_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->ns_outscale = (std::remove_reference_t<decltype(data->ns_outscale)>)CLAMPIS(value, 0.0099999998f, 10.0f);
#else
    data->ns_outscale = CLAMPIS(value, 0.0099999998f, 10.0f);
#endif
}

RNA_EXTERN_C float VoronoiTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void VoronoiTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C float VoronoiTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void VoronoiTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

RNA_EXTERN_C float DistortedNoiseTexture_distortion_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->dist_amount);
}

RNA_EXTERN_C void DistortedNoiseTexture_distortion_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->dist_amount = (std::remove_reference_t<decltype(data->dist_amount)>)CLAMPIS(value, 0.0f, 10.0f);
#else
    data->dist_amount = CLAMPIS(value, 0.0f, 10.0f);
#endif
}

RNA_EXTERN_C float DistortedNoiseTexture_noise_scale_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->noisesize);
}

RNA_EXTERN_C void DistortedNoiseTexture_noise_scale_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisesize = (std::remove_reference_t<decltype(data->noisesize)>)CLAMPIS(value, 0.0001000000f, FLT_MAX);
#else
    data->noisesize = CLAMPIS(value, 0.0001000000f, FLT_MAX);
#endif
}

RNA_EXTERN_C int DistortedNoiseTexture_noise_basis_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis2);
}

RNA_EXTERN_C void DistortedNoiseTexture_noise_basis_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis2 = (std::remove_reference_t<decltype(data->noisebasis2)>)value;
#else
    data->noisebasis2 = value;
#endif
}

RNA_EXTERN_C int DistortedNoiseTexture_noise_distortion_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (int)(data->noisebasis);
}

RNA_EXTERN_C void DistortedNoiseTexture_noise_distortion_set(PointerRNA *ptr, int value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->noisebasis = (std::remove_reference_t<decltype(data->noisebasis)>)value;
#else
    data->noisebasis = value;
#endif
}

RNA_EXTERN_C float DistortedNoiseTexture_nabla_get(PointerRNA *ptr)
{
    Tex *data = (Tex *)(ptr->data);
    return (float)(data->nabla);
}

RNA_EXTERN_C void DistortedNoiseTexture_nabla_set(PointerRNA *ptr, float value)
{
    Tex *data = (Tex *)(ptr->data);
#ifdef __cplusplus
    data->nabla = (std::remove_reference_t<decltype(data->nabla)>)CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#else
    data->nabla = CLAMPIS(value, 0.0010000000f, 0.1000000015f);
#endif
}

static PointerRNA TextureSlot_rna_properties_get(CollectionPropertyIterator *iter)
{
    return rna_builtin_properties_get(iter);
}

RNA_EXTERN_C void TextureSlot_rna_properties_begin(CollectionPropertyIterator *iter, PointerRNA *ptr)
{

    memset(iter, 0, sizeof(*iter));
    iter->parent = *ptr;
    iter->prop = (PropertyRNA *)&rna_TextureSlot_rna_properties;

    rna_builtin_properties_begin(iter, ptr);

    if (iter->valid) {
        iter->ptr = TextureSlot_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void TextureSlot_rna_properties_next(CollectionPropertyIterator *iter)
{
    rna_builtin_properties_next(iter);

    if (iter->valid) {
        iter->ptr = TextureSlot_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void TextureSlot_rna_properties_end(CollectionPropertyIterator *iter)
{
    rna_iterator_listbase_end(iter);
}

RNA_EXTERN_C int TextureSlot_rna_properties_lookup_string(PointerRNA *ptr, const char *key, PointerRNA *r_ptr)
{
    return rna_builtin_properties_lookup_string(ptr, key, r_ptr);
}

RNA_EXTERN_C PointerRNA TextureSlot_rna_type_get(PointerRNA *ptr)
{
    return rna_builtin_type_get(ptr);
}

RNA_EXTERN_C PointerRNA TextureSlot_texture_get(PointerRNA *ptr)
{
    MTex *data = (MTex *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_Texture, data->tex);
}

RNA_EXTERN_C void TextureSlot_texture_set(PointerRNA *ptr, PointerRNA value, struct ReportList *reports)
{
    MTex *data = (MTex *)(ptr->data);

    if (data->tex) {
        id_us_min((ID *)data->tex);
    }
    if (value.data) {
        id_us_plus((ID *)value.data);
    }
    *(void **)&data->tex = value.data;
}

RNA_EXTERN_C void TextureSlot_name_get(PointerRNA *ptr, char *value)
{
    rna_TextureSlot_name_get(ptr, value);
}

RNA_EXTERN_C int TextureSlot_name_length(PointerRNA *ptr)
{
    return rna_TextureSlot_name_length(ptr);
}

RNA_EXTERN_C void TextureSlot_offset_get(PointerRNA *ptr, float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->ofs)[i]);
    }
}

RNA_EXTERN_C void TextureSlot_offset_set(PointerRNA *ptr, const float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->ofs)[i] = values[i];
    }
}

RNA_EXTERN_C void TextureSlot_scale_get(PointerRNA *ptr, float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->size)[i]);
    }
}

RNA_EXTERN_C void TextureSlot_scale_set(PointerRNA *ptr, const float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->size)[i] = values[i];
    }
}

RNA_EXTERN_C void TextureSlot_color_get(PointerRNA *ptr, float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)((&data->r)[i]);
    }
}

RNA_EXTERN_C void TextureSlot_color_set(PointerRNA *ptr, const float values[3])
{
    MTex *data = (MTex *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        (&data->r)[i] = CLAMPIS(values[i], 0.0f, FLT_MAX);
    }
}

RNA_EXTERN_C int TextureSlot_blend_type_get(PointerRNA *ptr)
{
    MTex *data = (MTex *)(ptr->data);
    return (int)(data->blendtype);
}

RNA_EXTERN_C void TextureSlot_blend_type_set(PointerRNA *ptr, int value)
{
    MTex *data = (MTex *)(ptr->data);
#ifdef __cplusplus
    data->blendtype = (std::remove_reference_t<decltype(data->blendtype)>)value;
#else
    data->blendtype = value;
#endif
}

RNA_EXTERN_C float TextureSlot_default_value_get(PointerRNA *ptr)
{
    MTex *data = (MTex *)(ptr->data);
    return (float)(data->def_var);
}

RNA_EXTERN_C void TextureSlot_default_value_set(PointerRNA *ptr, float value)
{
    MTex *data = (MTex *)(ptr->data);
#ifdef __cplusplus
    data->def_var = (std::remove_reference_t<decltype(data->def_var)>)value;
#else
    data->def_var = value;
#endif
}

RNA_EXTERN_C int TextureSlot_output_node_get(PointerRNA *ptr)
{
    PropEnumGetFunc fn = rna_TextureSlot_output_node_get;
    return fn(ptr);
}

RNA_EXTERN_C void TextureSlot_output_node_set(PointerRNA *ptr, int value)
{
    MTex *data = (MTex *)(ptr->data);
#ifdef __cplusplus
    data->which_output = (std::remove_reference_t<decltype(data->which_output)>)value;
#else
    data->which_output = value;
#endif
}

static PointerRNA TexMapping_rna_properties_get(CollectionPropertyIterator *iter)
{
    return rna_builtin_properties_get(iter);
}

RNA_EXTERN_C void TexMapping_rna_properties_begin(CollectionPropertyIterator *iter, PointerRNA *ptr)
{

    memset(iter, 0, sizeof(*iter));
    iter->parent = *ptr;
    iter->prop = (PropertyRNA *)&rna_TexMapping_rna_properties;

    rna_builtin_properties_begin(iter, ptr);

    if (iter->valid) {
        iter->ptr = TexMapping_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void TexMapping_rna_properties_next(CollectionPropertyIterator *iter)
{
    rna_builtin_properties_next(iter);

    if (iter->valid) {
        iter->ptr = TexMapping_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void TexMapping_rna_properties_end(CollectionPropertyIterator *iter)
{
    rna_iterator_listbase_end(iter);
}

RNA_EXTERN_C int TexMapping_rna_properties_lookup_string(PointerRNA *ptr, const char *key, PointerRNA *r_ptr)
{
    return rna_builtin_properties_lookup_string(ptr, key, r_ptr);
}

RNA_EXTERN_C PointerRNA TexMapping_rna_type_get(PointerRNA *ptr)
{
    return rna_builtin_type_get(ptr);
}

RNA_EXTERN_C int TexMapping_vector_type_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (int)(data->type);
}

RNA_EXTERN_C void TexMapping_vector_type_set(PointerRNA *ptr, int value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
#ifdef __cplusplus
    data->type = (std::remove_reference_t<decltype(data->type)>)value;
#else
    data->type = value;
#endif
}

RNA_EXTERN_C void TexMapping_translation_get(PointerRNA *ptr, float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->loc)[i]);
    }
}

RNA_EXTERN_C void TexMapping_translation_set(PointerRNA *ptr, const float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->loc)[i] = values[i];
    }
}

RNA_EXTERN_C void TexMapping_rotation_get(PointerRNA *ptr, float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->rot)[i]);
    }
}

RNA_EXTERN_C void TexMapping_rotation_set(PointerRNA *ptr, const float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->rot)[i] = values[i];
    }
}

RNA_EXTERN_C void TexMapping_scale_get(PointerRNA *ptr, float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->size)[i]);
    }
}

RNA_EXTERN_C void TexMapping_scale_set(PointerRNA *ptr, const float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->size)[i] = values[i];
    }
}

RNA_EXTERN_C void TexMapping_min_get(PointerRNA *ptr, float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->min)[i]);
    }
}

RNA_EXTERN_C void TexMapping_min_set(PointerRNA *ptr, const float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->min)[i] = values[i];
    }
}

RNA_EXTERN_C void TexMapping_max_get(PointerRNA *ptr, float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->max)[i]);
    }
}

RNA_EXTERN_C void TexMapping_max_set(PointerRNA *ptr, const float values[3])
{
    TexMapping *data = (TexMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->max)[i] = values[i];
    }
}

RNA_EXTERN_C bool TexMapping_use_min_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (((data->flag) & 1) != 0);
}

RNA_EXTERN_C void TexMapping_use_min_set(PointerRNA *ptr, bool value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    if (value) { data->flag |= 1; }
    else { data->flag &= ~1; }
}

RNA_EXTERN_C bool TexMapping_use_max_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (((data->flag) & 2) != 0);
}

RNA_EXTERN_C void TexMapping_use_max_set(PointerRNA *ptr, bool value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    if (value) { data->flag |= 2; }
    else { data->flag &= ~2; }
}

RNA_EXTERN_C int TexMapping_mapping_x_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (int)(data->projx);
}

RNA_EXTERN_C void TexMapping_mapping_x_set(PointerRNA *ptr, int value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
#ifdef __cplusplus
    data->projx = (std::remove_reference_t<decltype(data->projx)>)value;
#else
    data->projx = value;
#endif
}

RNA_EXTERN_C int TexMapping_mapping_y_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (int)(data->projy);
}

RNA_EXTERN_C void TexMapping_mapping_y_set(PointerRNA *ptr, int value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
#ifdef __cplusplus
    data->projy = (std::remove_reference_t<decltype(data->projy)>)value;
#else
    data->projy = value;
#endif
}

RNA_EXTERN_C int TexMapping_mapping_z_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (int)(data->projz);
}

RNA_EXTERN_C void TexMapping_mapping_z_set(PointerRNA *ptr, int value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
#ifdef __cplusplus
    data->projz = (std::remove_reference_t<decltype(data->projz)>)value;
#else
    data->projz = value;
#endif
}

RNA_EXTERN_C int TexMapping_mapping_get(PointerRNA *ptr)
{
    TexMapping *data = (TexMapping *)(ptr->data);
    return (int)(data->mapping);
}

RNA_EXTERN_C void TexMapping_mapping_set(PointerRNA *ptr, int value)
{
    TexMapping *data = (TexMapping *)(ptr->data);
#ifdef __cplusplus
    data->mapping = (std::remove_reference_t<decltype(data->mapping)>)value;
#else
    data->mapping = value;
#endif
}

static PointerRNA ColorMapping_rna_properties_get(CollectionPropertyIterator *iter)
{
    return rna_builtin_properties_get(iter);
}

RNA_EXTERN_C void ColorMapping_rna_properties_begin(CollectionPropertyIterator *iter, PointerRNA *ptr)
{

    memset(iter, 0, sizeof(*iter));
    iter->parent = *ptr;
    iter->prop = (PropertyRNA *)&rna_ColorMapping_rna_properties;

    rna_builtin_properties_begin(iter, ptr);

    if (iter->valid) {
        iter->ptr = ColorMapping_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void ColorMapping_rna_properties_next(CollectionPropertyIterator *iter)
{
    rna_builtin_properties_next(iter);

    if (iter->valid) {
        iter->ptr = ColorMapping_rna_properties_get(iter);
    }
}

RNA_EXTERN_C void ColorMapping_rna_properties_end(CollectionPropertyIterator *iter)
{
    rna_iterator_listbase_end(iter);
}

RNA_EXTERN_C int ColorMapping_rna_properties_lookup_string(PointerRNA *ptr, const char *key, PointerRNA *r_ptr)
{
    return rna_builtin_properties_lookup_string(ptr, key, r_ptr);
}

RNA_EXTERN_C PointerRNA ColorMapping_rna_type_get(PointerRNA *ptr)
{
    return rna_builtin_type_get(ptr);
}

RNA_EXTERN_C bool ColorMapping_use_color_ramp_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (((data->flag) & 1) != 0);
}

RNA_EXTERN_C void ColorMapping_use_color_ramp_set(PointerRNA *ptr, bool value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    if (value) { data->flag |= 1; }
    else { data->flag &= ~1; }
}

RNA_EXTERN_C PointerRNA ColorMapping_color_ramp_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return rna_pointer_inherit_refine(ptr, &RNA_ColorRamp, &data->coba);
}

RNA_EXTERN_C float ColorMapping_brightness_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (float)(data->bright);
}

RNA_EXTERN_C void ColorMapping_brightness_set(PointerRNA *ptr, float value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
#ifdef __cplusplus
    data->bright = (std::remove_reference_t<decltype(data->bright)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->bright = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C float ColorMapping_contrast_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (float)(data->contrast);
}

RNA_EXTERN_C void ColorMapping_contrast_set(PointerRNA *ptr, float value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
#ifdef __cplusplus
    data->contrast = (std::remove_reference_t<decltype(data->contrast)>)CLAMPIS(value, 0.0f, 5.0f);
#else
    data->contrast = CLAMPIS(value, 0.0f, 5.0f);
#endif
}

RNA_EXTERN_C float ColorMapping_saturation_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (float)(data->saturation);
}

RNA_EXTERN_C void ColorMapping_saturation_set(PointerRNA *ptr, float value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
#ifdef __cplusplus
    data->saturation = (std::remove_reference_t<decltype(data->saturation)>)CLAMPIS(value, 0.0f, 2.0f);
#else
    data->saturation = CLAMPIS(value, 0.0f, 2.0f);
#endif
}

RNA_EXTERN_C int ColorMapping_blend_type_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (int)(data->blend_type);
}

RNA_EXTERN_C void ColorMapping_blend_type_set(PointerRNA *ptr, int value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
#ifdef __cplusplus
    data->blend_type = (std::remove_reference_t<decltype(data->blend_type)>)value;
#else
    data->blend_type = value;
#endif
}

RNA_EXTERN_C void ColorMapping_blend_color_get(PointerRNA *ptr, float values[3])
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        values[i] = (float)(((float *)data->blend_color)[i]);
    }
}

RNA_EXTERN_C void ColorMapping_blend_color_set(PointerRNA *ptr, const float values[3])
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    unsigned int i;

    for (i = 0; i < 3; i++) {
        ((float *)data->blend_color)[i] = CLAMPIS(values[i], 0.0f, FLT_MAX);
    }
}

RNA_EXTERN_C float ColorMapping_blend_factor_get(PointerRNA *ptr)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
    return (float)(data->blend_factor);
}

RNA_EXTERN_C void ColorMapping_blend_factor_set(PointerRNA *ptr, float value)
{
    ColorMapping *data = (ColorMapping *)(ptr->data);
#ifdef __cplusplus
    data->blend_factor = (std::remove_reference_t<decltype(data->blend_factor)>)value;
#else
    data->blend_factor = value;
#endif
}

RNA_EXTERN_C void Texture_evaluate_func(struct Tex *_self, float value[3], float result[4])
{
	texture_evaluate(_self, value, result);
}

static void Texture_evaluate_call(bContext *C, ReportList *reports, PointerRNA *_ptr, ParameterList *_parms)
{
	struct Tex *_self;
	const float *value;
	float *result;
	char *_data;
	
	_self = (struct Tex *)_ptr->data;
	_data = (char *)_parms->data;
	value = ((const float *)_data);
	_data += 16;
	result = ((float *)_data);
	
	texture_evaluate(_self, value, result);
}

/* Repeated prototypes to detect errors */

void texture_evaluate(struct Tex *_self, float value[3], float result[4]);















/* Texture */
EnumPropertyRNA rna_Texture_type = {
	{(PropertyRNA *)&rna_Texture_use_clamp, nullptr,
	-1, "type", 3, 0, 0, 0, 0, "Type",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_type_get, Texture_type_set, nullptr, nullptr, nullptr, rna_enum_texture_type_items, 12, 8
};

BoolPropertyRNA rna_Texture_use_clamp = {
	{(PropertyRNA *)&rna_Texture_use_color_ramp, (PropertyRNA *)&rna_Texture_type,
	-1, "use_clamp", 3, 0, 0, 0, 0, "Clamp",
	"Set negative texture RGB and intensity values to zero, for some uses like displacement this option can be disabled to get the full range",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_use_clamp_get, Texture_use_clamp_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 1, nullptr
};

BoolPropertyRNA rna_Texture_use_color_ramp = {
	{(PropertyRNA *)&rna_Texture_color_ramp, (PropertyRNA *)&rna_Texture_use_clamp,
	-1, "use_color_ramp", 3, 0, 0, 0, 0, "Use Color Ramp",
	"Map the texture intensity to the color ramp. Note that the alpha value is used for image textures, enable \"Calculate Alpha\" for images without an alpha channel",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_use_color_ramp_get, Texture_use_color_ramp_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

PointerPropertyRNA rna_Texture_color_ramp = {
	{(PropertyRNA *)&rna_Texture_intensity, (PropertyRNA *)&rna_Texture_use_color_ramp,
	-1, "color_ramp", 8388608, 0, 0, 0, 0, "Color Ramp",
	"",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_MASS), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_color_ramp_get, nullptr, nullptr, nullptr,&RNA_ColorRamp
};

FloatPropertyRNA rna_Texture_intensity = {
	{(PropertyRNA *)&rna_Texture_contrast, (PropertyRNA *)&rna_Texture_color_ramp,
	-1, "intensity", 3, 0, 0, 4, 0, "Brightness",
	"Adjust the brightness of the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, bright), (RawPropertyType)5, nullptr},
	Texture_intensity_get, Texture_intensity_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_Texture_contrast = {
	{(PropertyRNA *)&rna_Texture_saturation, (PropertyRNA *)&rna_Texture_intensity,
	-1, "contrast", 3, 0, 0, 4, 0, "Contrast",
	"Adjust the contrast of the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, contrast), (RawPropertyType)5, nullptr},
	Texture_contrast_get, Texture_contrast_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 5.0f, 0.0f, 5.0f, 1.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_Texture_saturation = {
	{(PropertyRNA *)&rna_Texture_factor_red, (PropertyRNA *)&rna_Texture_contrast,
	-1, "saturation", 3, 0, 0, 4, 0, "Saturation",
	"Adjust the saturation of colors in the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, saturation), (RawPropertyType)5, nullptr},
	Texture_saturation_get, Texture_saturation_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_Texture_factor_red = {
	{(PropertyRNA *)&rna_Texture_factor_green, (PropertyRNA *)&rna_Texture_saturation,
	-1, "factor_red", 3, 0, 0, 4, 0, "Factor Red",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, rfac), (RawPropertyType)5, nullptr},
	Texture_factor_red_get, Texture_factor_red_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_Texture_factor_green = {
	{(PropertyRNA *)&rna_Texture_factor_blue, (PropertyRNA *)&rna_Texture_factor_red,
	-1, "factor_green", 3, 0, 0, 4, 0, "Factor Green",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, gfac), (RawPropertyType)5, nullptr},
	Texture_factor_green_get, Texture_factor_green_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_Texture_factor_blue = {
	{(PropertyRNA *)&rna_Texture_use_preview_alpha, (PropertyRNA *)&rna_Texture_factor_green,
	-1, "factor_blue", 3, 0, 0, 4, 0, "Factor Blue",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, bfac), (RawPropertyType)5, nullptr},
	Texture_factor_blue_get, Texture_factor_blue_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 1.0f, nullptr
};

BoolPropertyRNA rna_Texture_use_preview_alpha = {
	{(PropertyRNA *)&rna_Texture_use_nodes, (PropertyRNA *)&rna_Texture_factor_blue,
	-1, "use_preview_alpha", 3, 0, 0, 0, 0, "Show Alpha",
	"Show Alpha in Preview Render",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_use_preview_alpha_get, Texture_use_preview_alpha_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_Texture_use_nodes = {
	{(PropertyRNA *)&rna_Texture_node_tree, (PropertyRNA *)&rna_Texture_use_preview_alpha,
	-1, "use_nodes", 4194307, 0, 0, 0, 0, "Use Nodes",
	"Make this a node-based texture",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_Texture_use_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_use_nodes_get, Texture_use_nodes_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

PointerPropertyRNA rna_Texture_node_tree = {
	{(PropertyRNA *)&rna_Texture_animation_data, (PropertyRNA *)&rna_Texture_use_nodes,
	-1, "node_tree", 8388672, 1, 0, 32, 0, "Node Tree",
	"Node tree for node-based textures",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	Texture_node_tree_get, nullptr, nullptr, nullptr,&RNA_NodeTree
};

PointerPropertyRNA rna_Texture_animation_data = {
	{nullptr, (PropertyRNA *)&rna_Texture_node_tree,
	-1, "animation_data", 8388608, 1, 0, 0, 0, "Animation Data",
	"Animation data for this data-block",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_AnimaData_override_apply,
	0, PROP_RAW_UNSET, nullptr},
	Texture_animation_data_get, nullptr, nullptr, nullptr,&RNA_AnimData
};

static float rna_Texture_evaluate_value_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_Texture_evaluate_value = {
	{(PropertyRNA *)&rna_Texture_evaluate_result, nullptr,
	-1, "value", 3, 0, 1, 0, 0, "The coordinates (x,y,z) of the texture, in case of a 3D texture, the z value is the slice of the texture that is evaluated. For 2D textures such as images, the z value is ignored",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 1.0f, 3, 0.0f, rna_Texture_evaluate_value_default
};

static float rna_Texture_evaluate_result_default[4] = {
	0.0f,
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_Texture_evaluate_result = {
	{nullptr, (PropertyRNA *)&rna_Texture_evaluate_value,
	-1, "result", 8388611, 0, 2, 0, 0, "The result of the texture where (x,y,z,w) are (red, green, blue, intensity). For grayscale textures, often intensity only will be used",
	nullptr,
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {4, 0, 0}, 4,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 1.0f, 3, 0.0f, rna_Texture_evaluate_result_default
};

FunctionRNA rna_Texture_evaluate_func = {
	{nullptr, nullptr,
	nullptr,
	{(PropertyRNA *)&rna_Texture_evaluate_value, (PropertyRNA *)&rna_Texture_evaluate_result}},
	"evaluate", 0, "Evaluate the texture at the a given coordinate and returns the result",
	Texture_evaluate_call,
	nullptr
};

StructRNA RNA_Texture = {
	{(ContainerRNA *)&RNA_CloudsTexture, (ContainerRNA *)&RNA_IDPropertyWrapPtr,
	nullptr,
	{(PropertyRNA *)&rna_Texture_type, (PropertyRNA *)&rna_Texture_animation_data}},
	"Texture", nullptr, nullptr, 519, nullptr, "Texture",
	"Texture data-block used by materials, lights, worlds and brushes",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_ID,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{(FunctionRNA *)&rna_Texture_evaluate_func, (FunctionRNA *)&rna_Texture_evaluate_func}
};

/* Clouds Texture */
FloatPropertyRNA rna_CloudsTexture_noise_scale = {
	{(PropertyRNA *)&rna_CloudsTexture_noise_depth, nullptr,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	CloudsTexture_noise_scale_get, CloudsTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

IntPropertyRNA rna_CloudsTexture_noise_depth = {
	{(PropertyRNA *)&rna_CloudsTexture_noise_basis, (PropertyRNA *)&rna_CloudsTexture_noise_scale,
	-1, "noise_depth", 3, 0, 0, 4, 0, "Noise Depth",
	"Depth of the cloud calculation",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisedepth), (RawPropertyType)1, nullptr},
	CloudsTexture_noise_depth_get, CloudsTexture_noise_depth_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 0, 24, 0, 30, 1, 2, nullptr
};

static const EnumPropertyItem rna_CloudsTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_CloudsTexture_noise_basis = {
	{(PropertyRNA *)&rna_CloudsTexture_noise_type, (PropertyRNA *)&rna_CloudsTexture_noise_depth,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	CloudsTexture_noise_basis_get, CloudsTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_CloudsTexture_noise_basis_items, 10, 0
};

static const EnumPropertyItem rna_CloudsTexture_noise_type_items[3] = {
	{0, "SOFT_NOISE", 0, "Soft", "Generate soft noise (smooth transitions)"},
	{1, "HARD_NOISE", 0, "Hard", "Generate hard noise (sharp transitions)"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_CloudsTexture_noise_type = {
	{(PropertyRNA *)&rna_CloudsTexture_cloud_type, (PropertyRNA *)&rna_CloudsTexture_noise_basis,
	-1, "noise_type", 3, 0, 0, 4, 0, "Noise Type",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisetype), (RawPropertyType)1, nullptr},
	CloudsTexture_noise_type_get, CloudsTexture_noise_type_set, nullptr, nullptr, nullptr, rna_CloudsTexture_noise_type_items, 2, 0
};

static const EnumPropertyItem rna_CloudsTexture_cloud_type_items[3] = {
	{0, "GRAYSCALE", 0, "Grayscale", ""},
	{1, "COLOR", 0, "Color", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_CloudsTexture_cloud_type = {
	{(PropertyRNA *)&rna_CloudsTexture_nabla, (PropertyRNA *)&rna_CloudsTexture_noise_type,
	-1, "cloud_type", 3, 0, 0, 4, 0, "Color",
	"Determine whether Noise returns grayscale or RGB values",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	CloudsTexture_cloud_type_get, CloudsTexture_cloud_type_set, nullptr, nullptr, nullptr, rna_CloudsTexture_cloud_type_items, 2, 0
};

FloatPropertyRNA rna_CloudsTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_CloudsTexture_cloud_type,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	CloudsTexture_nabla_get, CloudsTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_CloudsTexture = {
	{(ContainerRNA *)&RNA_WoodTexture, (ContainerRNA *)&RNA_Texture,
	nullptr,
	{(PropertyRNA *)&rna_CloudsTexture_noise_scale, (PropertyRNA *)&rna_CloudsTexture_nabla}},
	"CloudsTexture", nullptr, nullptr, 519, nullptr, "Clouds Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Wood Texture */
FloatPropertyRNA rna_WoodTexture_noise_scale = {
	{(PropertyRNA *)&rna_WoodTexture_turbulence, nullptr,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	WoodTexture_noise_scale_get, WoodTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

FloatPropertyRNA rna_WoodTexture_turbulence = {
	{(PropertyRNA *)&rna_WoodTexture_noise_basis, (PropertyRNA *)&rna_WoodTexture_noise_scale,
	-1, "turbulence", 3, 0, 0, 4, 0, "Turbulence",
	"Turbulence of the bandnoise and ringnoise types",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, turbul), (RawPropertyType)5, nullptr},
	WoodTexture_turbulence_get, WoodTexture_turbulence_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 200.0f, 0.0001000000f, FLT_MAX, 10.0f, 2, 5.0f, nullptr
};

static const EnumPropertyItem rna_WoodTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_WoodTexture_noise_basis = {
	{(PropertyRNA *)&rna_WoodTexture_noise_type, (PropertyRNA *)&rna_WoodTexture_turbulence,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	WoodTexture_noise_basis_get, WoodTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_WoodTexture_noise_basis_items, 10, 0
};

static const EnumPropertyItem rna_WoodTexture_noise_type_items[3] = {
	{0, "SOFT_NOISE", 0, "Soft", "Generate soft noise (smooth transitions)"},
	{1, "HARD_NOISE", 0, "Hard", "Generate hard noise (sharp transitions)"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_WoodTexture_noise_type = {
	{(PropertyRNA *)&rna_WoodTexture_wood_type, (PropertyRNA *)&rna_WoodTexture_noise_basis,
	-1, "noise_type", 3, 0, 0, 4, 0, "Noise Type",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisetype), (RawPropertyType)1, nullptr},
	WoodTexture_noise_type_get, WoodTexture_noise_type_set, nullptr, nullptr, nullptr, rna_WoodTexture_noise_type_items, 2, 0
};

static const EnumPropertyItem rna_WoodTexture_wood_type_items[5] = {
	{0, "BANDS", 0, "Bands", "Use standard wood texture in bands"},
	{1, "RINGS", 0, "Rings", "Use wood texture in rings"},
	{2, "BANDNOISE", 0, "Band Noise", "Add noise to standard wood"},
	{3, "RINGNOISE", 0, "Ring Noise", "Add noise to rings"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_WoodTexture_wood_type = {
	{(PropertyRNA *)&rna_WoodTexture_noise_basis_2, (PropertyRNA *)&rna_WoodTexture_noise_type,
	-1, "wood_type", 3, 0, 0, 4, 0, "Pattern",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	WoodTexture_wood_type_get, WoodTexture_wood_type_set, nullptr, nullptr, nullptr, rna_WoodTexture_wood_type_items, 4, 0
};

static const EnumPropertyItem rna_WoodTexture_noise_basis_2_items[4] = {
	{0, "SIN", 0, "Sine", "Use a sine wave to produce bands"},
	{1, "SAW", 0, "Saw", "Use a saw wave to produce bands"},
	{2, "TRI", 0, "Tri", "Use a triangle wave to produce bands"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_WoodTexture_noise_basis_2 = {
	{(PropertyRNA *)&rna_WoodTexture_nabla, (PropertyRNA *)&rna_WoodTexture_wood_type,
	-1, "noise_basis_2", 3, 0, 0, 4, 0, "Noise Basis 2",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis2), (RawPropertyType)1, nullptr},
	WoodTexture_noise_basis_2_get, WoodTexture_noise_basis_2_set, nullptr, nullptr, nullptr, rna_WoodTexture_noise_basis_2_items, 3, 0
};

FloatPropertyRNA rna_WoodTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_WoodTexture_noise_basis_2,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	WoodTexture_nabla_get, WoodTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_WoodTexture = {
	{(ContainerRNA *)&RNA_MarbleTexture, (ContainerRNA *)&RNA_CloudsTexture,
	nullptr,
	{(PropertyRNA *)&rna_WoodTexture_noise_scale, (PropertyRNA *)&rna_WoodTexture_nabla}},
	"WoodTexture", nullptr, nullptr, 519, nullptr, "Wood Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Marble Texture */
FloatPropertyRNA rna_MarbleTexture_noise_scale = {
	{(PropertyRNA *)&rna_MarbleTexture_turbulence, nullptr,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	MarbleTexture_noise_scale_get, MarbleTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

FloatPropertyRNA rna_MarbleTexture_turbulence = {
	{(PropertyRNA *)&rna_MarbleTexture_noise_depth, (PropertyRNA *)&rna_MarbleTexture_noise_scale,
	-1, "turbulence", 3, 0, 0, 4, 0, "Turbulence",
	"Turbulence of the bandnoise and ringnoise types",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, turbul), (RawPropertyType)5, nullptr},
	MarbleTexture_turbulence_get, MarbleTexture_turbulence_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 200.0f, 0.0001000000f, FLT_MAX, 10.0f, 2, 5.0f, nullptr
};

IntPropertyRNA rna_MarbleTexture_noise_depth = {
	{(PropertyRNA *)&rna_MarbleTexture_noise_type, (PropertyRNA *)&rna_MarbleTexture_turbulence,
	-1, "noise_depth", 3, 0, 0, 4, 0, "Noise Depth",
	"Depth of the cloud calculation",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisedepth), (RawPropertyType)1, nullptr},
	MarbleTexture_noise_depth_get, MarbleTexture_noise_depth_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 0, 24, 0, 30, 1, 2, nullptr
};

static const EnumPropertyItem rna_MarbleTexture_noise_type_items[3] = {
	{0, "SOFT_NOISE", 0, "Soft", "Generate soft noise (smooth transitions)"},
	{1, "HARD_NOISE", 0, "Hard", "Generate hard noise (sharp transitions)"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MarbleTexture_noise_type = {
	{(PropertyRNA *)&rna_MarbleTexture_marble_type, (PropertyRNA *)&rna_MarbleTexture_noise_depth,
	-1, "noise_type", 3, 0, 0, 4, 0, "Noise Type",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisetype), (RawPropertyType)1, nullptr},
	MarbleTexture_noise_type_get, MarbleTexture_noise_type_set, nullptr, nullptr, nullptr, rna_MarbleTexture_noise_type_items, 2, 0
};

static const EnumPropertyItem rna_MarbleTexture_marble_type_items[4] = {
	{0, "SOFT", 0, "Soft", "Use soft marble"},
	{1, "SHARP", 0, "Sharp", "Use more clearly defined marble"},
	{2, "SHARPER", 0, "Sharper", "Use very clearly defined marble"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MarbleTexture_marble_type = {
	{(PropertyRNA *)&rna_MarbleTexture_noise_basis, (PropertyRNA *)&rna_MarbleTexture_noise_type,
	-1, "marble_type", 3, 0, 0, 4, 0, "Pattern",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	MarbleTexture_marble_type_get, MarbleTexture_marble_type_set, nullptr, nullptr, nullptr, rna_MarbleTexture_marble_type_items, 3, 0
};

static const EnumPropertyItem rna_MarbleTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MarbleTexture_noise_basis = {
	{(PropertyRNA *)&rna_MarbleTexture_noise_basis_2, (PropertyRNA *)&rna_MarbleTexture_marble_type,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	MarbleTexture_noise_basis_get, MarbleTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_MarbleTexture_noise_basis_items, 10, 0
};

static const EnumPropertyItem rna_MarbleTexture_noise_basis_2_items[4] = {
	{0, "SIN", 0, "Sin", "Use a sine wave to produce bands"},
	{1, "SAW", 0, "Saw", "Use a saw wave to produce bands"},
	{2, "TRI", 0, "Tri", "Use a triangle wave to produce bands"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MarbleTexture_noise_basis_2 = {
	{(PropertyRNA *)&rna_MarbleTexture_nabla, (PropertyRNA *)&rna_MarbleTexture_noise_basis,
	-1, "noise_basis_2", 3, 0, 0, 4, 0, "Noise Basis 2",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis2), (RawPropertyType)1, nullptr},
	MarbleTexture_noise_basis_2_get, MarbleTexture_noise_basis_2_set, nullptr, nullptr, nullptr, rna_MarbleTexture_noise_basis_2_items, 3, 0
};

FloatPropertyRNA rna_MarbleTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_MarbleTexture_noise_basis_2,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	MarbleTexture_nabla_get, MarbleTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_MarbleTexture = {
	{(ContainerRNA *)&RNA_MagicTexture, (ContainerRNA *)&RNA_WoodTexture,
	nullptr,
	{(PropertyRNA *)&rna_MarbleTexture_noise_scale, (PropertyRNA *)&rna_MarbleTexture_nabla}},
	"MarbleTexture", nullptr, nullptr, 519, nullptr, "Marble Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Magic Texture */
FloatPropertyRNA rna_MagicTexture_turbulence = {
	{(PropertyRNA *)&rna_MagicTexture_noise_depth, nullptr,
	-1, "turbulence", 3, 0, 0, 4, 0, "Turbulence",
	"Turbulence of the noise",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, turbul), (RawPropertyType)5, nullptr},
	MagicTexture_turbulence_get, MagicTexture_turbulence_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 200.0f, 0.0001000000f, FLT_MAX, 10.0f, 2, 5.0f, nullptr
};

IntPropertyRNA rna_MagicTexture_noise_depth = {
	{nullptr, (PropertyRNA *)&rna_MagicTexture_turbulence,
	-1, "noise_depth", 3, 0, 0, 4, 0, "Noise Depth",
	"Depth of the noise",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisedepth), (RawPropertyType)1, nullptr},
	MagicTexture_noise_depth_get, MagicTexture_noise_depth_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 0, 24, 0, 30, 1, 2, nullptr
};

StructRNA RNA_MagicTexture = {
	{(ContainerRNA *)&RNA_BlendTexture, (ContainerRNA *)&RNA_MarbleTexture,
	nullptr,
	{(PropertyRNA *)&rna_MagicTexture_turbulence, (PropertyRNA *)&rna_MagicTexture_noise_depth}},
	"MagicTexture", nullptr, nullptr, 519, nullptr, "Magic Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Blend Texture */
static const EnumPropertyItem rna_BlendTexture_progression_items[8] = {
	{0, "LINEAR", 0, "Linear", "Create a linear progression"},
	{1, "QUADRATIC", 0, "Quadratic", "Create a quadratic progression"},
	{2, "EASING", 0, "Easing", "Create a progression easing from one step to the next"},
	{3, "DIAGONAL", 0, "Diagonal", "Create a diagonal progression"},
	{4, "SPHERICAL", 0, "Spherical", "Create a spherical progression"},
	{5, "QUADRATIC_SPHERE", 0, "Quadratic Sphere", "Create a quadratic progression in the shape of a sphere"},
	{6, "RADIAL", 0, "Radial", "Create a radial progression"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_BlendTexture_progression = {
	{(PropertyRNA *)&rna_BlendTexture_use_flip_axis, nullptr,
	-1, "progression", 3, 0, 0, 4, 0, "Progression",
	"Style of the color blending",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	BlendTexture_progression_get, BlendTexture_progression_set, nullptr, nullptr, nullptr, rna_BlendTexture_progression_items, 7, 0
};

static const EnumPropertyItem rna_BlendTexture_use_flip_axis_items[3] = {
	{0, "HORIZONTAL", 0, "Horizontal", "No flipping"},
	{2, "VERTICAL", 0, "Vertical", "Flip the texture\'s X and Y axis"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_BlendTexture_use_flip_axis = {
	{nullptr, (PropertyRNA *)&rna_BlendTexture_progression,
	-1, "use_flip_axis", 3, 0, 0, 4, 0, "Flip Axis",
	"Flip the texture\'s X and Y axis",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, flag), (RawPropertyType)1, nullptr},
	BlendTexture_use_flip_axis_get, BlendTexture_use_flip_axis_set, nullptr, nullptr, nullptr, rna_BlendTexture_use_flip_axis_items, 2, 0
};

StructRNA RNA_BlendTexture = {
	{(ContainerRNA *)&RNA_StucciTexture, (ContainerRNA *)&RNA_MagicTexture,
	nullptr,
	{(PropertyRNA *)&rna_BlendTexture_progression, (PropertyRNA *)&rna_BlendTexture_use_flip_axis}},
	"BlendTexture", nullptr, nullptr, 519, nullptr, "Blend Texture",
	"Procedural color blending texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Stucci Texture */
FloatPropertyRNA rna_StucciTexture_turbulence = {
	{(PropertyRNA *)&rna_StucciTexture_noise_basis, nullptr,
	-1, "turbulence", 3, 0, 0, 4, 0, "Turbulence",
	"Turbulence of the noise",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, turbul), (RawPropertyType)5, nullptr},
	StucciTexture_turbulence_get, StucciTexture_turbulence_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 200.0f, 0.0001000000f, FLT_MAX, 10.0f, 2, 5.0f, nullptr
};

static const EnumPropertyItem rna_StucciTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_StucciTexture_noise_basis = {
	{(PropertyRNA *)&rna_StucciTexture_noise_scale, (PropertyRNA *)&rna_StucciTexture_turbulence,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	StucciTexture_noise_basis_get, StucciTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_StucciTexture_noise_basis_items, 10, 0
};

FloatPropertyRNA rna_StucciTexture_noise_scale = {
	{(PropertyRNA *)&rna_StucciTexture_noise_type, (PropertyRNA *)&rna_StucciTexture_noise_basis,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	StucciTexture_noise_scale_get, StucciTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

static const EnumPropertyItem rna_StucciTexture_noise_type_items[3] = {
	{0, "SOFT_NOISE", 0, "Soft", "Generate soft noise (smooth transitions)"},
	{1, "HARD_NOISE", 0, "Hard", "Generate hard noise (sharp transitions)"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_StucciTexture_noise_type = {
	{(PropertyRNA *)&rna_StucciTexture_stucci_type, (PropertyRNA *)&rna_StucciTexture_noise_scale,
	-1, "noise_type", 3, 0, 0, 4, 0, "Noise Type",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisetype), (RawPropertyType)1, nullptr},
	StucciTexture_noise_type_get, StucciTexture_noise_type_set, nullptr, nullptr, nullptr, rna_StucciTexture_noise_type_items, 2, 0
};

static const EnumPropertyItem rna_StucciTexture_stucci_type_items[4] = {
	{0, "PLASTIC", 0, "Plastic", "Use standard stucci"},
	{1, "WALL_IN", 0, "Wall In", "Create Dimples"},
	{2, "WALL_OUT", 0, "Wall Out", "Create Ridges"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_StucciTexture_stucci_type = {
	{nullptr, (PropertyRNA *)&rna_StucciTexture_noise_type,
	-1, "stucci_type", 3, 0, 0, 4, 0, "Pattern",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	StucciTexture_stucci_type_get, StucciTexture_stucci_type_set, nullptr, nullptr, nullptr, rna_StucciTexture_stucci_type_items, 3, 0
};

StructRNA RNA_StucciTexture = {
	{(ContainerRNA *)&RNA_NoiseTexture, (ContainerRNA *)&RNA_BlendTexture,
	nullptr,
	{(PropertyRNA *)&rna_StucciTexture_turbulence, (PropertyRNA *)&rna_StucciTexture_stucci_type}},
	"StucciTexture", nullptr, nullptr, 519, nullptr, "Stucci Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Noise Texture */
StructRNA RNA_NoiseTexture = {
	{(ContainerRNA *)&RNA_ImageTexture, (ContainerRNA *)&RNA_StucciTexture,
	nullptr,
	{nullptr, nullptr}},
	"NoiseTexture", nullptr, nullptr, 519, nullptr, "Noise Texture",
	"Procedural noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Image Texture */
BoolPropertyRNA rna_ImageTexture_use_interpolation = {
	{(PropertyRNA *)&rna_ImageTexture_use_flip_axis, nullptr,
	-1, "use_interpolation", 3, 0, 0, 0, 0, "Interpolation",
	"Interpolate pixels using selected filter",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_interpolation_get, ImageTexture_use_interpolation_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 1, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_flip_axis = {
	{(PropertyRNA *)&rna_ImageTexture_use_alpha, (PropertyRNA *)&rna_ImageTexture_use_interpolation,
	-1, "use_flip_axis", 3, 0, 0, 0, 0, "Flip Axis",
	"Flip the texture\'s X and Y axis",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_flip_axis_get, ImageTexture_use_flip_axis_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_alpha = {
	{(PropertyRNA *)&rna_ImageTexture_use_calculate_alpha, (PropertyRNA *)&rna_ImageTexture_use_flip_axis,
	-1, "use_alpha", 3, 0, 0, 0, 0, "Use Alpha",
	"Use the alpha channel information in the image",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_alpha_get, ImageTexture_use_alpha_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 1, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_calculate_alpha = {
	{(PropertyRNA *)&rna_ImageTexture_invert_alpha, (PropertyRNA *)&rna_ImageTexture_use_alpha,
	-1, "use_calculate_alpha", 3, 0, 0, 0, 0, "Calculate Alpha",
	"Calculate an alpha channel based on RGB values in the image",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_calculate_alpha_get, ImageTexture_use_calculate_alpha_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_ImageTexture_invert_alpha = {
	{(PropertyRNA *)&rna_ImageTexture_use_mipmap, (PropertyRNA *)&rna_ImageTexture_use_calculate_alpha,
	-1, "invert_alpha", 3, 0, 0, 0, 0, "Invert Alpha",
	"Invert all the alpha values in the image",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_invert_alpha_get, ImageTexture_invert_alpha_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_mipmap = {
	{(PropertyRNA *)&rna_ImageTexture_use_mipmap_gauss, (PropertyRNA *)&rna_ImageTexture_invert_alpha,
	-1, "use_mipmap", 3, 0, 0, 0, 0, "MIP Map",
	"Use auto-generated MIP maps for the image",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_mipmap_get, ImageTexture_use_mipmap_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 1, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_mipmap_gauss = {
	{(PropertyRNA *)&rna_ImageTexture_filter_type, (PropertyRNA *)&rna_ImageTexture_use_mipmap,
	-1, "use_mipmap_gauss", 3, 0, 0, 0, 0, "MIP Map Gaussian filter",
	"Use Gauss filter to sample down MIP maps",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_mipmap_gauss_get, ImageTexture_use_mipmap_gauss_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

static const EnumPropertyItem rna_ImageTexture_filter_type_items[5] = {
	{0, "BOX", 0, "Box", ""},
	{1, "EWA", 0, "EWA", ""},
	{2, "FELINE", 0, "FELINE", ""},
	{3, "AREA", 0, "Area", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_ImageTexture_filter_type = {
	{(PropertyRNA *)&rna_ImageTexture_filter_lightprobes, (PropertyRNA *)&rna_ImageTexture_use_mipmap_gauss,
	-1, "filter_type", 3, 0, 0, 4, 0, "Filter",
	"Texture filter to use for sampling image",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, texfilter), (RawPropertyType)0, nullptr},
	ImageTexture_filter_type_get, ImageTexture_filter_type_set, nullptr, nullptr, nullptr, rna_ImageTexture_filter_type_items, 4, 1
};

IntPropertyRNA rna_ImageTexture_filter_lightprobes = {
	{(PropertyRNA *)&rna_ImageTexture_filter_eccentricity, (PropertyRNA *)&rna_ImageTexture_filter_type,
	-1, "filter_lightprobes", 3, 0, 0, 4, 0, "Filter Probes",
	"Maximum number of samples (higher gives less blur at distant/oblique angles, but is also slower)",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, afmax), (RawPropertyType)0, nullptr},
	ImageTexture_filter_lightprobes_get, ImageTexture_filter_lightprobes_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 1, 256, 1, 256, 1, 8, nullptr
};

IntPropertyRNA rna_ImageTexture_filter_eccentricity = {
	{(PropertyRNA *)&rna_ImageTexture_use_filter_size_min, (PropertyRNA *)&rna_ImageTexture_filter_lightprobes,
	-1, "filter_eccentricity", 3, 0, 0, 4, 0, "Filter Eccentricity",
	"Maximum eccentricity (higher gives less blur at distant/oblique angles, but is also slower)",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, afmax), (RawPropertyType)0, nullptr},
	ImageTexture_filter_eccentricity_get, ImageTexture_filter_eccentricity_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 1, 256, 1, 256, 1, 8, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_filter_size_min = {
	{(PropertyRNA *)&rna_ImageTexture_filter_size, (PropertyRNA *)&rna_ImageTexture_filter_eccentricity,
	-1, "use_filter_size_min", 3, 0, 0, 0, 0, "Minimum Filter Size",
	"Use Filter Size as a minimal filter value in pixels",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_filter_size_min_get, ImageTexture_use_filter_size_min_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

FloatPropertyRNA rna_ImageTexture_filter_size = {
	{(PropertyRNA *)&rna_ImageTexture_extension, (PropertyRNA *)&rna_ImageTexture_use_filter_size_min,
	-1, "filter_size", 3, 0, 0, 4, 0, "Filter Size",
	"Multiply the filter size used by MIP Map and Interpolation",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, filtersize), (RawPropertyType)5, nullptr},
	ImageTexture_filter_size_get, ImageTexture_filter_size_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.1000000015f, 50.0f, 0.1000000015f, 50.0f, 1.0f, 2, 1.0f, nullptr
};

static const EnumPropertyItem rna_ImageTexture_extension_items[6] = {
	{1, "EXTEND", 0, "Extend", "Extend by repeating edge pixels of the image"},
	{2, "CLIP", 0, "Clip", "Clip to image size and set exterior pixels as transparent"},
	{4, "CLIP_CUBE", 0, "Clip Cube", "Clip to cubic-shaped area around the image and set exterior pixels as transparent"},
	{3, "REPEAT", 0, "Repeat", "Cause the image to repeat horizontally and vertically"},
	{5, "CHECKER", 0, "Checker", "Cause the image to repeat in checker board pattern"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_ImageTexture_extension = {
	{(PropertyRNA *)&rna_ImageTexture_repeat_x, (PropertyRNA *)&rna_ImageTexture_filter_size,
	-1, "extension", 3, 0, 0, 4, 0, "Extension",
	"How the image is extrapolated past its original bounds",
	0, "Image",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, extend), (RawPropertyType)1, nullptr},
	ImageTexture_extension_get, ImageTexture_extension_set, nullptr, nullptr, nullptr, rna_ImageTexture_extension_items, 5, 3
};

IntPropertyRNA rna_ImageTexture_repeat_x = {
	{(PropertyRNA *)&rna_ImageTexture_repeat_y, (PropertyRNA *)&rna_ImageTexture_extension,
	-1, "repeat_x", 3, 0, 0, 4, 0, "Repeat X",
	"Repetition multiplier in the X direction",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, xrepeat), (RawPropertyType)1, nullptr},
	ImageTexture_repeat_x_get, ImageTexture_repeat_x_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 1, 512, 1, 512, 1, 1, nullptr
};

IntPropertyRNA rna_ImageTexture_repeat_y = {
	{(PropertyRNA *)&rna_ImageTexture_use_mirror_x, (PropertyRNA *)&rna_ImageTexture_repeat_x,
	-1, "repeat_y", 3, 0, 0, 4, 0, "Repeat Y",
	"Repetition multiplier in the Y direction",
	0, "*",
	PROP_INT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, yrepeat), (RawPropertyType)1, nullptr},
	ImageTexture_repeat_y_get, ImageTexture_repeat_y_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr,
	PROP_SCALE_LINEAR, 1, 512, 1, 512, 1, 1, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_mirror_x = {
	{(PropertyRNA *)&rna_ImageTexture_use_mirror_y, (PropertyRNA *)&rna_ImageTexture_repeat_y,
	-1, "use_mirror_x", 3, 0, 0, 0, 0, "Mirror X",
	"Mirror the image repetition on the X direction",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_mirror_x_get, ImageTexture_use_mirror_x_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_mirror_y = {
	{(PropertyRNA *)&rna_ImageTexture_use_checker_odd, (PropertyRNA *)&rna_ImageTexture_use_mirror_x,
	-1, "use_mirror_y", 3, 0, 0, 0, 0, "Mirror Y",
	"Mirror the image repetition on the Y direction",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_mirror_y_get, ImageTexture_use_mirror_y_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_checker_odd = {
	{(PropertyRNA *)&rna_ImageTexture_use_checker_even, (PropertyRNA *)&rna_ImageTexture_use_mirror_y,
	-1, "use_checker_odd", 3, 0, 0, 0, 0, "Checker Odd",
	"Odd checker tiles",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_checker_odd_get, ImageTexture_use_checker_odd_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 1, nullptr
};

BoolPropertyRNA rna_ImageTexture_use_checker_even = {
	{(PropertyRNA *)&rna_ImageTexture_checker_distance, (PropertyRNA *)&rna_ImageTexture_use_checker_odd,
	-1, "use_checker_even", 3, 0, 0, 0, 0, "Checker Even",
	"Even checker tiles",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_checker_even_get, ImageTexture_use_checker_even_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

FloatPropertyRNA rna_ImageTexture_checker_distance = {
	{(PropertyRNA *)&rna_ImageTexture_crop_min_x, (PropertyRNA *)&rna_ImageTexture_use_checker_even,
	-1, "checker_distance", 3, 0, 0, 4, 0, "Checker Distance",
	"Distance between checker tiles",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, checkerdist), (RawPropertyType)5, nullptr},
	ImageTexture_checker_distance_get, ImageTexture_checker_distance_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 0.9900000095f, 0.0f, 0.9900000095f, 0.1000000015f, 2, 0.0f, nullptr
};

FloatPropertyRNA rna_ImageTexture_crop_min_x = {
	{(PropertyRNA *)&rna_ImageTexture_crop_min_y, (PropertyRNA *)&rna_ImageTexture_checker_distance,
	-1, "crop_min_x", 3, 0, 0, 4, 0, "Crop Minimum X",
	"Minimum X value to crop the image",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, cropxmin), (RawPropertyType)5, nullptr},
	ImageTexture_crop_min_x_get, ImageTexture_crop_min_x_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10.0f, 10.0f, -10.0f, 10.0f, 1.0f, 2, 0.0f, nullptr
};

FloatPropertyRNA rna_ImageTexture_crop_min_y = {
	{(PropertyRNA *)&rna_ImageTexture_crop_max_x, (PropertyRNA *)&rna_ImageTexture_crop_min_x,
	-1, "crop_min_y", 3, 0, 0, 4, 0, "Crop Minimum Y",
	"Minimum Y value to crop the image",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, cropymin), (RawPropertyType)5, nullptr},
	ImageTexture_crop_min_y_get, ImageTexture_crop_min_y_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10.0f, 10.0f, -10.0f, 10.0f, 1.0f, 2, 0.0f, nullptr
};

FloatPropertyRNA rna_ImageTexture_crop_max_x = {
	{(PropertyRNA *)&rna_ImageTexture_crop_max_y, (PropertyRNA *)&rna_ImageTexture_crop_min_y,
	-1, "crop_max_x", 3, 0, 0, 4, 0, "Crop Maximum X",
	"Maximum X value to crop the image",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, cropxmax), (RawPropertyType)5, nullptr},
	ImageTexture_crop_max_x_get, ImageTexture_crop_max_x_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10.0f, 10.0f, -10.0f, 10.0f, 1.0f, 2, 1.0f, nullptr
};

FloatPropertyRNA rna_ImageTexture_crop_max_y = {
	{(PropertyRNA *)&rna_ImageTexture_image, (PropertyRNA *)&rna_ImageTexture_crop_max_x,
	-1, "crop_max_y", 3, 0, 0, 4, 0, "Crop Maximum Y",
	"Maximum Y value to crop the image",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, cropymax), (RawPropertyType)5, nullptr},
	ImageTexture_crop_max_y_get, ImageTexture_crop_max_y_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10.0f, 10.0f, -10.0f, 10.0f, 1.0f, 2, 1.0f, nullptr
};

PointerPropertyRNA rna_ImageTexture_image = {
	{(PropertyRNA *)&rna_ImageTexture_image_user, (PropertyRNA *)&rna_ImageTexture_crop_max_y,
	-1, "image", 8388801, 1, 0, 0, 0, "Image",
	"",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_image_get, ImageTexture_image_set, nullptr, nullptr,&RNA_Image
};

PointerPropertyRNA rna_ImageTexture_image_user = {
	{(PropertyRNA *)&rna_ImageTexture_use_normal_map, (PropertyRNA *)&rna_ImageTexture_image,
	-1, "image_user", 8388608, 0, 0, 0, 0, "Image User",
	"Parameters defining which layer, pass and frame of the image is displayed",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_MASS), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_image_user_get, nullptr, nullptr, nullptr,&RNA_ImageUser
};

BoolPropertyRNA rna_ImageTexture_use_normal_map = {
	{nullptr, (PropertyRNA *)&rna_ImageTexture_image_user,
	-1, "use_normal_map", 3, 0, 0, 0, 0, "Normal Map",
	"Use image RGB values for normal mapping",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ImageTexture_use_normal_map_get, ImageTexture_use_normal_map_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

StructRNA RNA_ImageTexture = {
	{(ContainerRNA *)&RNA_MusgraveTexture, (ContainerRNA *)&RNA_NoiseTexture,
	nullptr,
	{(PropertyRNA *)&rna_ImageTexture_use_interpolation, (PropertyRNA *)&rna_ImageTexture_use_normal_map}},
	"ImageTexture", nullptr, nullptr, 519, nullptr, "Image Texture",
	"",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Musgrave */
static const EnumPropertyItem rna_MusgraveTexture_musgrave_type_items[6] = {
	{0, "MULTIFRACTAL", 0, "Multifractal", "Use Perlin noise as a basis"},
	{1, "RIDGED_MULTIFRACTAL", 0, "Ridged Multifractal", "Use Perlin noise with inflection as a basis"},
	{2, "HYBRID_MULTIFRACTAL", 0, "Hybrid Multifractal", "Use Perlin noise as a basis, with extended controls"},
	{3, "FBM", 0, "fBM", "Fractal Brownian Motion, use Brownian noise as a basis"},
	{4, "HETERO_TERRAIN", 0, "Hetero Terrain", "Similar to multifractal"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MusgraveTexture_musgrave_type = {
	{(PropertyRNA *)&rna_MusgraveTexture_dimension_max, nullptr,
	-1, "musgrave_type", 3, 0, 0, 4, 0, "Type",
	"Fractal noise algorithm",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, stype), (RawPropertyType)1, nullptr},
	MusgraveTexture_musgrave_type_get, MusgraveTexture_musgrave_type_set, nullptr, nullptr, nullptr, rna_MusgraveTexture_musgrave_type_items, 5, 0
};

FloatPropertyRNA rna_MusgraveTexture_dimension_max = {
	{(PropertyRNA *)&rna_MusgraveTexture_lacunarity, (PropertyRNA *)&rna_MusgraveTexture_musgrave_type,
	-1, "dimension_max", 3, 0, 0, 4, 0, "Highest Dimension",
	"Highest fractal dimension",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, mg_H), (RawPropertyType)5, nullptr},
	MusgraveTexture_dimension_max_get, MusgraveTexture_dimension_max_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, 2.0f, 1.0f, 2, 1.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_lacunarity = {
	{(PropertyRNA *)&rna_MusgraveTexture_octaves, (PropertyRNA *)&rna_MusgraveTexture_dimension_max,
	-1, "lacunarity", 3, 0, 0, 4, 0, "Lacunarity",
	"Gap between successive frequencies",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, mg_lacunarity), (RawPropertyType)5, nullptr},
	MusgraveTexture_lacunarity_get, MusgraveTexture_lacunarity_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 6.0f, 0.0f, 6.0f, 1.0f, 2, 2.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_octaves = {
	{(PropertyRNA *)&rna_MusgraveTexture_offset, (PropertyRNA *)&rna_MusgraveTexture_lacunarity,
	-1, "octaves", 3, 0, 0, 4, 0, "Octaves",
	"Number of frequencies used",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, mg_octaves), (RawPropertyType)5, nullptr},
	MusgraveTexture_octaves_get, MusgraveTexture_octaves_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 8.0f, 0.0f, 8.0f, 1.0f, 2, 2.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_offset = {
	{(PropertyRNA *)&rna_MusgraveTexture_gain, (PropertyRNA *)&rna_MusgraveTexture_octaves,
	-1, "offset", 3, 0, 0, 4, 0, "Offset",
	"The fractal offset",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, mg_offset), (RawPropertyType)5, nullptr},
	MusgraveTexture_offset_get, MusgraveTexture_offset_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 6.0f, 0.0f, 6.0f, 1.0f, 2, 1.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_gain = {
	{(PropertyRNA *)&rna_MusgraveTexture_noise_intensity, (PropertyRNA *)&rna_MusgraveTexture_offset,
	-1, "gain", 3, 0, 0, 4, 0, "Gain",
	"The gain multiplier",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, mg_gain), (RawPropertyType)5, nullptr},
	MusgraveTexture_gain_get, MusgraveTexture_gain_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 6.0f, 0.0f, 6.0f, 1.0f, 2, 1.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_noise_intensity = {
	{(PropertyRNA *)&rna_MusgraveTexture_noise_scale, (PropertyRNA *)&rna_MusgraveTexture_gain,
	-1, "noise_intensity", 3, 0, 0, 4, 0, "Noise Intensity",
	"Intensity of the noise",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, ns_outscale), (RawPropertyType)5, nullptr},
	MusgraveTexture_noise_intensity_get, MusgraveTexture_noise_intensity_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 10.0f, 0.0f, 10.0f, 1.0f, 2, 1.0f, nullptr
};

FloatPropertyRNA rna_MusgraveTexture_noise_scale = {
	{(PropertyRNA *)&rna_MusgraveTexture_noise_basis, (PropertyRNA *)&rna_MusgraveTexture_noise_intensity,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	MusgraveTexture_noise_scale_get, MusgraveTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

static const EnumPropertyItem rna_MusgraveTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_MusgraveTexture_noise_basis = {
	{(PropertyRNA *)&rna_MusgraveTexture_nabla, (PropertyRNA *)&rna_MusgraveTexture_noise_scale,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	MusgraveTexture_noise_basis_get, MusgraveTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_MusgraveTexture_noise_basis_items, 10, 0
};

FloatPropertyRNA rna_MusgraveTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_MusgraveTexture_noise_basis,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	MusgraveTexture_nabla_get, MusgraveTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_MusgraveTexture = {
	{(ContainerRNA *)&RNA_VoronoiTexture, (ContainerRNA *)&RNA_ImageTexture,
	nullptr,
	{(PropertyRNA *)&rna_MusgraveTexture_musgrave_type, (PropertyRNA *)&rna_MusgraveTexture_nabla}},
	"MusgraveTexture", nullptr, nullptr, 519, nullptr, "Musgrave",
	"Procedural musgrave texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Voronoi */
FloatPropertyRNA rna_VoronoiTexture_weight_1 = {
	{(PropertyRNA *)&rna_VoronoiTexture_weight_2, nullptr,
	-1, "weight_1", 3, 0, 0, 4, 0, "Weight 1",
	"Voronoi feature weight 1",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_w1), (RawPropertyType)5, nullptr},
	VoronoiTexture_weight_1_get, VoronoiTexture_weight_1_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -2.0f, 2.0f, -2.0f, 2.0f, 10.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_weight_2 = {
	{(PropertyRNA *)&rna_VoronoiTexture_weight_3, (PropertyRNA *)&rna_VoronoiTexture_weight_1,
	-1, "weight_2", 3, 0, 0, 4, 0, "Weight 2",
	"Voronoi feature weight 2",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_w2), (RawPropertyType)5, nullptr},
	VoronoiTexture_weight_2_get, VoronoiTexture_weight_2_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -2.0f, 2.0f, -2.0f, 2.0f, 10.0f, 3, 0.0f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_weight_3 = {
	{(PropertyRNA *)&rna_VoronoiTexture_weight_4, (PropertyRNA *)&rna_VoronoiTexture_weight_2,
	-1, "weight_3", 3, 0, 0, 4, 0, "Weight 3",
	"Voronoi feature weight 3",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_w3), (RawPropertyType)5, nullptr},
	VoronoiTexture_weight_3_get, VoronoiTexture_weight_3_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -2.0f, 2.0f, -2.0f, 2.0f, 10.0f, 3, 0.0f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_weight_4 = {
	{(PropertyRNA *)&rna_VoronoiTexture_minkovsky_exponent, (PropertyRNA *)&rna_VoronoiTexture_weight_3,
	-1, "weight_4", 3, 0, 0, 4, 0, "Weight 4",
	"Voronoi feature weight 4",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_w4), (RawPropertyType)5, nullptr},
	VoronoiTexture_weight_4_get, VoronoiTexture_weight_4_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -2.0f, 2.0f, -2.0f, 2.0f, 10.0f, 3, 0.0f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_minkovsky_exponent = {
	{(PropertyRNA *)&rna_VoronoiTexture_distance_metric, (PropertyRNA *)&rna_VoronoiTexture_weight_4,
	-1, "minkovsky_exponent", 3, 0, 0, 4, 0, "Minkowski Exponent",
	"Minkowski exponent",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_mexp), (RawPropertyType)5, nullptr},
	VoronoiTexture_minkovsky_exponent_get, VoronoiTexture_minkovsky_exponent_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0099999998f, 10.0f, 0.0099999998f, 10.0f, 10.0f, 3, 2.5000000000f, nullptr
};

static const EnumPropertyItem rna_VoronoiTexture_distance_metric_items[8] = {
	{0, "DISTANCE", 0, "Actual Distance", "sqrt(x*x+y*y+z*z)"},
	{1, "DISTANCE_SQUARED", 0, "Distance Squared", "(x*x+y*y+z*z)"},
	{2, "MANHATTAN", 0, "Manhattan", "The length of the distance in axial directions"},
	{3, "CHEBYCHEV", 0, "Chebychev", "The length of the longest Axial journey"},
	{4, "MINKOVSKY_HALF", 0, "Minkowski 1/2", "Set Minkowski variable to 0.5"},
	{5, "MINKOVSKY_FOUR", 0, "Minkowski 4", "Set Minkowski variable to 4"},
	{6, "MINKOVSKY", 0, "Minkowski", "Use the Minkowski function to calculate distance (exponent value determines the shape of the boundaries)"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_VoronoiTexture_distance_metric = {
	{(PropertyRNA *)&rna_VoronoiTexture_color_mode, (PropertyRNA *)&rna_VoronoiTexture_minkovsky_exponent,
	-1, "distance_metric", 3, 0, 0, 4, 0, "Distance Metric",
	"Algorithm used to calculate distance of sample points to feature points",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_distm), (RawPropertyType)1, nullptr},
	VoronoiTexture_distance_metric_get, VoronoiTexture_distance_metric_set, nullptr, nullptr, nullptr, rna_VoronoiTexture_distance_metric_items, 7, 0
};

static const EnumPropertyItem rna_VoronoiTexture_color_mode_items[5] = {
	{0, "INTENSITY", 0, "Intensity", "Only calculate intensity"},
	{1, "POSITION", 0, "Position", "Color cells by position"},
	{2, "POSITION_OUTLINE", 0, "Position and Outline", "Use position plus an outline based on F2-F1"},
	{3, "POSITION_OUTLINE_INTENSITY", 0, "Position, Outline, and Intensity", "Multiply position and outline by intensity"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_VoronoiTexture_color_mode = {
	{(PropertyRNA *)&rna_VoronoiTexture_noise_intensity, (PropertyRNA *)&rna_VoronoiTexture_distance_metric,
	-1, "color_mode", 3, 0, 0, 4, 0, "Coloring",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, vn_coltype), (RawPropertyType)1, nullptr},
	VoronoiTexture_color_mode_get, VoronoiTexture_color_mode_set, nullptr, nullptr, nullptr, rna_VoronoiTexture_color_mode_items, 4, 0
};

FloatPropertyRNA rna_VoronoiTexture_noise_intensity = {
	{(PropertyRNA *)&rna_VoronoiTexture_noise_scale, (PropertyRNA *)&rna_VoronoiTexture_color_mode,
	-1, "noise_intensity", 3, 0, 0, 4, 0, "Noise Intensity",
	"Scales the intensity of the noise",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, ns_outscale), (RawPropertyType)5, nullptr},
	VoronoiTexture_noise_intensity_get, VoronoiTexture_noise_intensity_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0099999998f, 10.0f, 0.0099999998f, 10.0f, 10.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_noise_scale = {
	{(PropertyRNA *)&rna_VoronoiTexture_nabla, (PropertyRNA *)&rna_VoronoiTexture_noise_intensity,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	VoronoiTexture_noise_scale_get, VoronoiTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

FloatPropertyRNA rna_VoronoiTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_VoronoiTexture_noise_scale,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	VoronoiTexture_nabla_get, VoronoiTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_VoronoiTexture = {
	{(ContainerRNA *)&RNA_DistortedNoiseTexture, (ContainerRNA *)&RNA_MusgraveTexture,
	nullptr,
	{(PropertyRNA *)&rna_VoronoiTexture_weight_1, (PropertyRNA *)&rna_VoronoiTexture_nabla}},
	"VoronoiTexture", nullptr, nullptr, 519, nullptr, "Voronoi",
	"Procedural voronoi texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Distorted Noise */
FloatPropertyRNA rna_DistortedNoiseTexture_distortion = {
	{(PropertyRNA *)&rna_DistortedNoiseTexture_noise_scale, nullptr,
	-1, "distortion", 3, 0, 0, 4, 0, "Distortion Amount",
	"Amount of distortion",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, dist_amount), (RawPropertyType)5, nullptr},
	DistortedNoiseTexture_distortion_get, DistortedNoiseTexture_distortion_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 10.0f, 0.0f, 10.0f, 10.0f, 3, 1.0f, nullptr
};

FloatPropertyRNA rna_DistortedNoiseTexture_noise_scale = {
	{(PropertyRNA *)&rna_DistortedNoiseTexture_noise_basis, (PropertyRNA *)&rna_DistortedNoiseTexture_distortion,
	-1, "noise_scale", 3, 0, 0, 4, 0, "Noise Size",
	"Scaling for noise input",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisesize), (RawPropertyType)5, nullptr},
	DistortedNoiseTexture_noise_scale_get, DistortedNoiseTexture_noise_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0001000000f, 2.0f, 0.0001000000f, FLT_MAX, 1.0f, 2, 0.2500000000f, nullptr
};

static const EnumPropertyItem rna_DistortedNoiseTexture_noise_basis_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_DistortedNoiseTexture_noise_basis = {
	{(PropertyRNA *)&rna_DistortedNoiseTexture_noise_distortion, (PropertyRNA *)&rna_DistortedNoiseTexture_noise_scale,
	-1, "noise_basis", 3, 0, 0, 4, 0, "Noise Basis",
	"Noise basis used for turbulence",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis2), (RawPropertyType)1, nullptr},
	DistortedNoiseTexture_noise_basis_get, DistortedNoiseTexture_noise_basis_set, nullptr, nullptr, nullptr, rna_DistortedNoiseTexture_noise_basis_items, 10, 0
};

static const EnumPropertyItem rna_DistortedNoiseTexture_noise_distortion_items[11] = {
	{0, "BLENDER_ORIGINAL", 0, "Blender Original", "Noise algorithm - Blender original: Smooth interpolated noise"},
	{1, "ORIGINAL_PERLIN", 0, "Original Perlin", "Noise algorithm - Original Perlin: Smooth interpolated noise"},
	{2, "IMPROVED_PERLIN", 0, "Improved Perlin", "Noise algorithm - Improved Perlin: Smooth interpolated noise"},
	{3, "VORONOI_F1", 0, "Voronoi F1", "Noise algorithm - Voronoi F1: Returns distance to the closest feature point"},
	{4, "VORONOI_F2", 0, "Voronoi F2", "Noise algorithm - Voronoi F2: Returns distance to the 2nd closest feature point"},
	{5, "VORONOI_F3", 0, "Voronoi F3", "Noise algorithm - Voronoi F3: Returns distance to the 3rd closest feature point"},
	{6, "VORONOI_F4", 0, "Voronoi F4", "Noise algorithm - Voronoi F4: Returns distance to the 4th closest feature point"},
	{7, "VORONOI_F2_F1", 0, "Voronoi F2-F1", "Noise algorithm - Voronoi F1-F2"},
	{8, "VORONOI_CRACKLE", 0, "Voronoi Crackle", "Noise algorithm - Voronoi Crackle: Voronoi tessellation with sharp edges"},
	{14, "CELL_NOISE", 0, "Cell Noise", "Noise algorithm - Cell Noise: Square cell tessellation"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_DistortedNoiseTexture_noise_distortion = {
	{(PropertyRNA *)&rna_DistortedNoiseTexture_nabla, (PropertyRNA *)&rna_DistortedNoiseTexture_noise_basis,
	-1, "noise_distortion", 3, 0, 0, 4, 0, "Noise Distortion",
	"Noise basis for the distortion",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_nodes_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, noisebasis), (RawPropertyType)1, nullptr},
	DistortedNoiseTexture_noise_distortion_get, DistortedNoiseTexture_noise_distortion_set, nullptr, nullptr, nullptr, rna_DistortedNoiseTexture_noise_distortion_items, 10, 0
};

FloatPropertyRNA rna_DistortedNoiseTexture_nabla = {
	{nullptr, (PropertyRNA *)&rna_DistortedNoiseTexture_noise_distortion,
	-1, "nabla", 3, 0, 0, 4, 0, "Nabla",
	"Size of derivative offset used for calculating normal",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(Tex, nabla), (RawPropertyType)5, nullptr},
	DistortedNoiseTexture_nabla_get, DistortedNoiseTexture_nabla_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0010000000f, 0.1000000015f, 0.0010000000f, 0.1000000015f, 1.0f, 2, 0.0250000004f, nullptr
};

StructRNA RNA_DistortedNoiseTexture = {
	{(ContainerRNA *)&RNA_TextureSlot, (ContainerRNA *)&RNA_VoronoiTexture,
	nullptr,
	{(PropertyRNA *)&rna_DistortedNoiseTexture_distortion, (PropertyRNA *)&rna_DistortedNoiseTexture_nabla}},
	"DistortedNoiseTexture", nullptr, nullptr, 519, nullptr, "Distorted Noise",
	"Procedural distorted noise texture",
	"*", 166,
	(PropertyRNA *)&rna_ID_name, (PropertyRNA *)&rna_ID_rna_properties,
	&RNA_Texture,
	nullptr,
	rna_Texture_refine,
	nullptr,
	nullptr,
	nullptr,
	rna_ID_instance,
	rna_ID_idprops,
	{nullptr, nullptr}
};

/* Texture Slot */
CollectionPropertyRNA rna_TextureSlot_rna_properties = {
	{(PropertyRNA *)&rna_TextureSlot_rna_type, nullptr,
	-1, "rna_properties", 0, 0, 0, 1, 0, "Properties",
	"RNA property collection",
	0, "*",
	PROP_COLLECTION, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TextureSlot_rna_properties_begin, TextureSlot_rna_properties_next, TextureSlot_rna_properties_end, TextureSlot_rna_properties_get, nullptr, nullptr, TextureSlot_rna_properties_lookup_string, nullptr, &RNA_Property
};

PointerPropertyRNA rna_TextureSlot_rna_type = {
	{(PropertyRNA *)&rna_TextureSlot_texture, (PropertyRNA *)&rna_TextureSlot_rna_properties,
	-1, "rna_type", 8912896, 0, 0, 0, 0, "RNA",
	"RNA type definition",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TextureSlot_rna_type_get, nullptr, nullptr, nullptr,&RNA_Struct
};

PointerPropertyRNA rna_TextureSlot_texture = {
	{(PropertyRNA *)&rna_TextureSlot_name, (PropertyRNA *)&rna_TextureSlot_rna_type,
	-1, "texture", 12583105, 1, 0, 0, 0, "Texture",
	"Texture data-block used by this texture slot",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_TextureSlotTexture_update, 119537664, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TextureSlot_texture_get, TextureSlot_texture_set, nullptr, nullptr,&RNA_Texture
};

StringPropertyRNA rna_TextureSlot_name = {
	{(PropertyRNA *)&rna_TextureSlot_offset, (PropertyRNA *)&rna_TextureSlot_texture,
	-1, "name", 4456448, 0, 0, 0, 0, "Name",
	"Texture slot name",
	0, "*",
	PROP_STRING, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TextureSlot_name_get, TextureSlot_name_length, nullptr, nullptr, nullptr, nullptr, nullptr, (eStringPropertySearchFlag)0, 0, ""
};

static float rna_TextureSlot_offset_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TextureSlot_offset = {
	{(PropertyRNA *)&rna_TextureSlot_scale, (PropertyRNA *)&rna_TextureSlot_name,
	-1, "offset", 4194307, 0, 0, 4, 0, "Offset",
	"Fine tune of the texture mapping X, Y and Z locations",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_TRANSLATION | (int)PROP_UNIT_LENGTH), nullptr, 1, {3, 0, 0}, 3,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(MTex, ofs), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TextureSlot_offset_get, TextureSlot_offset_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10.0f, 10.0f, -FLT_MAX, FLT_MAX, 10.0f, 5, 0.0f, rna_TextureSlot_offset_default
};

static float rna_TextureSlot_scale_default[3] = {
	1.0f,
	1.0f,
	1.0f
};

FloatPropertyRNA rna_TextureSlot_scale = {
	{(PropertyRNA *)&rna_TextureSlot_color, (PropertyRNA *)&rna_TextureSlot_offset,
	-1, "scale", 71303171, 0, 0, 4, 0, "Size",
	"Set scaling for the texture\'s X, Y and Z sizes",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(MTex, size), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TextureSlot_scale_get, TextureSlot_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -100.0f, 100.0f, -FLT_MAX, FLT_MAX, 10.0f, 2, 0.0f, rna_TextureSlot_scale_default
};

static float rna_TextureSlot_color_default[3] = {
	1.0f,
	1.0f,
	1.0f
};

FloatPropertyRNA rna_TextureSlot_color = {
	{(PropertyRNA *)&rna_TextureSlot_blend_type, (PropertyRNA *)&rna_TextureSlot_scale,
	-1, "color", 4194307, 0, 0, 4, 0, "Color",
	"Default color for textures that don\'t return RGB or when RGB to intensity is enabled",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_COLOR | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(MTex, r), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TextureSlot_color_get, TextureSlot_color_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 1.0f, 0.0f, FLT_MAX, 10.0f, 3, 1.0f, rna_TextureSlot_color_default
};

static const EnumPropertyItem rna_TextureSlot_blend_type_items[22] = {
	{0, "MIX", 0, "Mix", ""},
	{0, "", 0, nullptr, nullptr},
	{5, "DARKEN", 0, "Darken", ""},
	{1, "MULTIPLY", 0, "Multiply", ""},
	{0, "", 0, nullptr, nullptr},
	{7, "LIGHTEN", 0, "Lighten", ""},
	{8, "SCREEN", 0, "Screen", ""},
	{2, "ADD", 0, "Add", ""},
	{0, "", 0, nullptr, nullptr},
	{9, "OVERLAY", 0, "Overlay", ""},
	{15, "SOFT_LIGHT", 0, "Soft Light", ""},
	{16, "LINEAR_LIGHT", 0, "Linear Light", ""},
	{0, "", 0, nullptr, nullptr},
	{6, "DIFFERENCE", 0, "Difference", ""},
	{3, "SUBTRACT", 0, "Subtract", ""},
	{4, "DIVIDE", 0, "Divide", ""},
	{0, "", 0, nullptr, nullptr},
	{10, "HUE", 0, "Hue", ""},
	{11, "SATURATION", 0, "Saturation", ""},
	{13, "COLOR", 0, "Color", ""},
	{12, "VALUE", 0, "Value", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TextureSlot_blend_type = {
	{(PropertyRNA *)&rna_TextureSlot_default_value, (PropertyRNA *)&rna_TextureSlot_color,
	-1, "blend_type", 4194307, 0, 0, 4, 0, "Blend Type",
	"Mode used to apply the texture",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(MTex, blendtype), (RawPropertyType)1, nullptr},
	TextureSlot_blend_type_get, TextureSlot_blend_type_set, nullptr, nullptr, nullptr, rna_TextureSlot_blend_type_items, 21, 0
};

FloatPropertyRNA rna_TextureSlot_default_value = {
	{(PropertyRNA *)&rna_TextureSlot_output_node, (PropertyRNA *)&rna_TextureSlot_blend_type,
	-1, "default_value", 4194307, 0, 0, 4, 0, "Default Value",
	"Value to use for Ref, Spec, Amb, Emit, Alpha, RayMir, TransLu and Hard",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(MTex, def_var), (RawPropertyType)5, nullptr},
	TextureSlot_default_value_get, TextureSlot_default_value_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 1.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 1.0f, nullptr
};

static const EnumPropertyItem rna_TextureSlot_output_node_items[2] = {
	{0, "DUMMY", 0, "Dummy", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TextureSlot_output_node = {
	{nullptr, (PropertyRNA *)&rna_TextureSlot_default_value,
	-1, "output_node", 4194307, 0, 0, 0, 0, "Output Node",
	"Which output node to use, for node-based textures",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	(UpdateFunc)(void *)rna_TextureSlot_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TextureSlot_output_node_get, TextureSlot_output_node_set, rna_TextureSlot_output_node_itemf, nullptr, nullptr, rna_TextureSlot_output_node_items, 1, 0
};

StructRNA RNA_TextureSlot = {
	{(ContainerRNA *)&RNA_TexMapping, (ContainerRNA *)&RNA_DistortedNoiseTexture,
	nullptr,
	{(PropertyRNA *)&rna_TextureSlot_rna_properties, (PropertyRNA *)&rna_TextureSlot_output_node}},
	"TextureSlot", nullptr, nullptr, 516, nullptr, "Texture Slot",
	"Texture slot defining the mapping and influence of a texture",
	"*", 166,
	(PropertyRNA *)&rna_TextureSlot_name, (PropertyRNA *)&rna_TextureSlot_rna_properties,
	nullptr,
	nullptr,
	nullptr,
	rna_TextureSlot_path,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	{nullptr, nullptr}
};

/* Texture Mapping */
CollectionPropertyRNA rna_TexMapping_rna_properties = {
	{(PropertyRNA *)&rna_TexMapping_rna_type, nullptr,
	-1, "rna_properties", 0, 0, 0, 1, 0, "Properties",
	"RNA property collection",
	0, "*",
	PROP_COLLECTION, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TexMapping_rna_properties_begin, TexMapping_rna_properties_next, TexMapping_rna_properties_end, TexMapping_rna_properties_get, nullptr, nullptr, TexMapping_rna_properties_lookup_string, nullptr, &RNA_Property
};

PointerPropertyRNA rna_TexMapping_rna_type = {
	{(PropertyRNA *)&rna_TexMapping_vector_type, (PropertyRNA *)&rna_TexMapping_rna_properties,
	-1, "rna_type", 8912896, 0, 0, 0, 0, "RNA",
	"RNA type definition",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TexMapping_rna_type_get, nullptr, nullptr, nullptr,&RNA_Struct
};

EnumPropertyRNA rna_TexMapping_vector_type = {
	{(PropertyRNA *)&rna_TexMapping_translation, (PropertyRNA *)&rna_TexMapping_rna_type,
	-1, "vector_type", 3, 0, 0, 4, 0, "Type",
	"Type of vector that the mapping transforms",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, type), (RawPropertyType)0, nullptr},
	TexMapping_vector_type_get, TexMapping_vector_type_set, nullptr, nullptr, nullptr, rna_enum_mapping_type_items, 4, 0
};

static float rna_TexMapping_translation_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TexMapping_translation = {
	{(PropertyRNA *)&rna_TexMapping_rotation, (PropertyRNA *)&rna_TexMapping_vector_type,
	-1, "translation", 3, 0, 0, 4, 0, "Location",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_TRANSLATION | (int)PROP_UNIT_LENGTH), nullptr, 1, {3, 0, 0}, 3,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, loc), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TexMapping_translation_get, TexMapping_translation_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -FLT_MAX, FLT_MAX, -FLT_MAX, FLT_MAX, 1.0f, 5, 0.0f, rna_TexMapping_translation_default
};

static float rna_TexMapping_rotation_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TexMapping_rotation = {
	{(PropertyRNA *)&rna_TexMapping_scale, (PropertyRNA *)&rna_TexMapping_translation,
	-1, "rotation", 3, 0, 0, 4, 0, "Rotation",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_EULER | (int)PROP_UNIT_ROTATION), nullptr, 1, {3, 0, 0}, 3,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, rot), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TexMapping_rotation_get, TexMapping_rotation_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -FLT_MAX, FLT_MAX, -FLT_MAX, FLT_MAX, 100.0f, 5, 0.0f, rna_TexMapping_rotation_default
};

static float rna_TexMapping_scale_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TexMapping_scale = {
	{(PropertyRNA *)&rna_TexMapping_min, (PropertyRNA *)&rna_TexMapping_rotation,
	-1, "scale", 67108867, 0, 0, 4, 0, "Scale",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, size), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TexMapping_scale_get, TexMapping_scale_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, rna_TexMapping_scale_default
};

static float rna_TexMapping_min_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TexMapping_min = {
	{(PropertyRNA *)&rna_TexMapping_max, (PropertyRNA *)&rna_TexMapping_scale,
	-1, "min", 3, 0, 0, 4, 0, "Minimum",
	"Minimum value for clipping",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, min), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TexMapping_min_get, TexMapping_min_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, rna_TexMapping_min_default
};

static float rna_TexMapping_max_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_TexMapping_max = {
	{(PropertyRNA *)&rna_TexMapping_use_min, (PropertyRNA *)&rna_TexMapping_min,
	-1, "max", 3, 0, 0, 4, 0, "Maximum",
	"Maximum value for clipping",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_XYZ | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, max), (RawPropertyType)5, nullptr},
	nullptr, nullptr, TexMapping_max_get, TexMapping_max_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, rna_TexMapping_max_default
};

BoolPropertyRNA rna_TexMapping_use_min = {
	{(PropertyRNA *)&rna_TexMapping_use_max, (PropertyRNA *)&rna_TexMapping_max,
	-1, "use_min", 3, 0, 0, 0, 0, "Has Minimum",
	"Whether to use minimum clipping value",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TexMapping_use_min_get, TexMapping_use_min_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

BoolPropertyRNA rna_TexMapping_use_max = {
	{(PropertyRNA *)&rna_TexMapping_mapping_x, (PropertyRNA *)&rna_TexMapping_use_min,
	-1, "use_max", 3, 0, 0, 0, 0, "Has Maximum",
	"Whether to use maximum clipping value",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	TexMapping_use_max_get, TexMapping_use_max_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

static const EnumPropertyItem rna_TexMapping_mapping_x_items[5] = {
	{0, "NONE", 0, "None", ""},
	{1, "X", 0, "X", ""},
	{2, "Y", 0, "Y", ""},
	{3, "Z", 0, "Z", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TexMapping_mapping_x = {
	{(PropertyRNA *)&rna_TexMapping_mapping_y, (PropertyRNA *)&rna_TexMapping_use_max,
	-1, "mapping_x", 3, 0, 0, 4, 0, "X Mapping",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, projx), (RawPropertyType)2, nullptr},
	TexMapping_mapping_x_get, TexMapping_mapping_x_set, nullptr, nullptr, nullptr, rna_TexMapping_mapping_x_items, 4, 0
};

static const EnumPropertyItem rna_TexMapping_mapping_y_items[5] = {
	{0, "NONE", 0, "None", ""},
	{1, "X", 0, "X", ""},
	{2, "Y", 0, "Y", ""},
	{3, "Z", 0, "Z", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TexMapping_mapping_y = {
	{(PropertyRNA *)&rna_TexMapping_mapping_z, (PropertyRNA *)&rna_TexMapping_mapping_x,
	-1, "mapping_y", 3, 0, 0, 4, 0, "Y Mapping",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, projy), (RawPropertyType)2, nullptr},
	TexMapping_mapping_y_get, TexMapping_mapping_y_set, nullptr, nullptr, nullptr, rna_TexMapping_mapping_y_items, 4, 0
};

static const EnumPropertyItem rna_TexMapping_mapping_z_items[5] = {
	{0, "NONE", 0, "None", ""},
	{1, "X", 0, "X", ""},
	{2, "Y", 0, "Y", ""},
	{3, "Z", 0, "Z", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TexMapping_mapping_z = {
	{(PropertyRNA *)&rna_TexMapping_mapping, (PropertyRNA *)&rna_TexMapping_mapping_y,
	-1, "mapping_z", 3, 0, 0, 4, 0, "Z Mapping",
	"",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, projz), (RawPropertyType)2, nullptr},
	TexMapping_mapping_z_get, TexMapping_mapping_z_set, nullptr, nullptr, nullptr, rna_TexMapping_mapping_z_items, 4, 0
};

static const EnumPropertyItem rna_TexMapping_mapping_items[5] = {
	{0, "FLAT", 0, "Flat", "Map X and Y coordinates directly"},
	{1, "CUBE", 0, "Cube", "Map using the normal vector"},
	{2, "TUBE", 0, "Tube", "Map with Z as central axis"},
	{3, "SPHERE", 0, "Sphere", "Map with Z as central axis"},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_TexMapping_mapping = {
	{nullptr, (PropertyRNA *)&rna_TexMapping_mapping_z,
	-1, "mapping", 3, 0, 0, 4, 0, "Mapping",
	"",
	0, "Image",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Texture_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(TexMapping, mapping), (RawPropertyType)2, nullptr},
	TexMapping_mapping_get, TexMapping_mapping_set, nullptr, nullptr, nullptr, rna_TexMapping_mapping_items, 4, 0
};

StructRNA RNA_TexMapping = {
	{(ContainerRNA *)&RNA_ColorMapping, (ContainerRNA *)&RNA_TextureSlot,
	nullptr,
	{(PropertyRNA *)&rna_TexMapping_rna_properties, (PropertyRNA *)&rna_TexMapping_mapping}},
	"TexMapping", nullptr, nullptr, 516, nullptr, "Texture Mapping",
	"Texture coordinate mapping settings",
	"*", 17,
	nullptr, (PropertyRNA *)&rna_TexMapping_rna_properties,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	{nullptr, nullptr}
};

/* Color Mapping */
CollectionPropertyRNA rna_ColorMapping_rna_properties = {
	{(PropertyRNA *)&rna_ColorMapping_rna_type, nullptr,
	-1, "rna_properties", 0, 0, 0, 1, 0, "Properties",
	"RNA property collection",
	0, "*",
	PROP_COLLECTION, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ColorMapping_rna_properties_begin, ColorMapping_rna_properties_next, ColorMapping_rna_properties_end, ColorMapping_rna_properties_get, nullptr, nullptr, ColorMapping_rna_properties_lookup_string, nullptr, &RNA_Property
};

PointerPropertyRNA rna_ColorMapping_rna_type = {
	{(PropertyRNA *)&rna_ColorMapping_use_color_ramp, (PropertyRNA *)&rna_ColorMapping_rna_properties,
	-1, "rna_type", 8912896, 0, 0, 0, 0, "RNA",
	"RNA type definition",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	nullptr, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ColorMapping_rna_type_get, nullptr, nullptr, nullptr,&RNA_Struct
};

BoolPropertyRNA rna_ColorMapping_use_color_ramp = {
	{(PropertyRNA *)&rna_ColorMapping_color_ramp, (PropertyRNA *)&rna_ColorMapping_rna_type,
	-1, "use_color_ramp", 3, 0, 0, 0, 0, "Use Color Ramp",
	"Toggle color ramp operations",
	0, "*",
	PROP_BOOLEAN, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ColorMapping_use_color_ramp_get, ColorMapping_use_color_ramp_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, 0, nullptr
};

PointerPropertyRNA rna_ColorMapping_color_ramp = {
	{(PropertyRNA *)&rna_ColorMapping_brightness, (PropertyRNA *)&rna_ColorMapping_use_color_ramp,
	-1, "color_ramp", 8388608, 0, 0, 0, 0, "Color Ramp",
	"",
	0, "*",
	PROP_POINTER, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_MASS), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	0, PROP_RAW_UNSET, nullptr},
	ColorMapping_color_ramp_get, nullptr, nullptr, nullptr,&RNA_ColorRamp
};

FloatPropertyRNA rna_ColorMapping_brightness = {
	{(PropertyRNA *)&rna_ColorMapping_contrast, (PropertyRNA *)&rna_ColorMapping_color_ramp,
	-1, "brightness", 3, 0, 0, 4, 0, "Brightness",
	"Adjust the brightness of the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, bright), (RawPropertyType)5, nullptr},
	ColorMapping_brightness_get, ColorMapping_brightness_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 0.0f, nullptr
};

FloatPropertyRNA rna_ColorMapping_contrast = {
	{(PropertyRNA *)&rna_ColorMapping_saturation, (PropertyRNA *)&rna_ColorMapping_brightness,
	-1, "contrast", 3, 0, 0, 4, 0, "Contrast",
	"Adjust the contrast of the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, contrast), (RawPropertyType)5, nullptr},
	ColorMapping_contrast_get, ColorMapping_contrast_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 5.0f, 0.0f, 5.0f, 1.0f, 3, 0.0f, nullptr
};

FloatPropertyRNA rna_ColorMapping_saturation = {
	{(PropertyRNA *)&rna_ColorMapping_blend_type, (PropertyRNA *)&rna_ColorMapping_contrast,
	-1, "saturation", 3, 0, 0, 4, 0, "Saturation",
	"Adjust the saturation of colors in the texture",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, saturation), (RawPropertyType)5, nullptr},
	ColorMapping_saturation_get, ColorMapping_saturation_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 2.0f, 0.0f, 2.0f, 1.0f, 3, 0.0f, nullptr
};

static const EnumPropertyItem rna_ColorMapping_blend_type_items[22] = {
	{0, "MIX", 0, "Mix", ""},
	{0, "", 0, nullptr, nullptr},
	{5, "DARKEN", 0, "Darken", ""},
	{1, "MULTIPLY", 0, "Multiply", ""},
	{0, "", 0, nullptr, nullptr},
	{7, "LIGHTEN", 0, "Lighten", ""},
	{8, "SCREEN", 0, "Screen", ""},
	{2, "ADD", 0, "Add", ""},
	{0, "", 0, nullptr, nullptr},
	{9, "OVERLAY", 0, "Overlay", ""},
	{15, "SOFT_LIGHT", 0, "Soft Light", ""},
	{16, "LINEAR_LIGHT", 0, "Linear Light", ""},
	{0, "", 0, nullptr, nullptr},
	{6, "DIFFERENCE", 0, "Difference", ""},
	{3, "SUBTRACT", 0, "Subtract", ""},
	{4, "DIVIDE", 0, "Divide", ""},
	{0, "", 0, nullptr, nullptr},
	{10, "HUE", 0, "Hue", ""},
	{11, "SATURATION", 0, "Saturation", ""},
	{13, "COLOR", 0, "Color", ""},
	{12, "VALUE", 0, "Value", ""},
	{0, nullptr, 0, nullptr, nullptr}
};

EnumPropertyRNA rna_ColorMapping_blend_type = {
	{(PropertyRNA *)&rna_ColorMapping_blend_color, (PropertyRNA *)&rna_ColorMapping_saturation,
	-1, "blend_type", 3, 0, 0, 4, 0, "Blend Type",
	"Mode used to mix with texture output color",
	0, "*",
	PROP_ENUM, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, blend_type), (RawPropertyType)0, nullptr},
	ColorMapping_blend_type_get, ColorMapping_blend_type_set, nullptr, nullptr, nullptr, rna_ColorMapping_blend_type_items, 21, 0
};

static float rna_ColorMapping_blend_color_default[3] = {
	0.0f,
	0.0f,
	0.0f
};

FloatPropertyRNA rna_ColorMapping_blend_color = {
	{(PropertyRNA *)&rna_ColorMapping_blend_factor, (PropertyRNA *)&rna_ColorMapping_blend_type,
	-1, "blend_color", 3, 0, 0, 4, 0, "Color",
	"Blend color to mix with texture output color",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_COLOR | (int)PROP_UNIT_NONE), nullptr, 1, {3, 0, 0}, 3,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, blend_color), (RawPropertyType)5, nullptr},
	nullptr, nullptr, ColorMapping_blend_color_get, ColorMapping_blend_color_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, 0.0f, 1.0f, 0.0f, FLT_MAX, 10.0f, 3, 0.0f, rna_ColorMapping_blend_color_default
};

FloatPropertyRNA rna_ColorMapping_blend_factor = {
	{nullptr, (PropertyRNA *)&rna_ColorMapping_blend_color,
	-1, "blend_factor", 3, 0, 0, 4, 0, "Blend Factor",
	"",
	0, "*",
	PROP_FLOAT, (PropertySubType)((int)PROP_NONE | (int)PROP_UNIT_NONE), nullptr, 0, {0, 0, 0}, 0,
	rna_Color_mapping_update, 0, nullptr, nullptr, rna_property_override_diff_default, rna_property_override_store_default, rna_property_override_apply_default,
	offsetof(ColorMapping, blend_factor), (RawPropertyType)5, nullptr},
	ColorMapping_blend_factor_get, ColorMapping_blend_factor_set, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, nullptr, PROP_SCALE_LINEAR, -10000.0f, 10000.0f, -FLT_MAX, FLT_MAX, 10.0f, 3, 0.0f, nullptr
};

StructRNA RNA_ColorMapping = {
	{(ContainerRNA *)&RNA_Action, (ContainerRNA *)&RNA_TexMapping,
	nullptr,
	{(PropertyRNA *)&rna_ColorMapping_rna_properties, (PropertyRNA *)&rna_ColorMapping_blend_factor}},
	"ColorMapping", nullptr, nullptr, 516, nullptr, "Color Mapping",
	"Color mapping settings",
	"*", 17,
	nullptr, (PropertyRNA *)&rna_ColorMapping_rna_properties,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	nullptr,
	{nullptr, nullptr}
};

